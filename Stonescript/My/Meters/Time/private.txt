// ///////////////// IMPORTS ///////////////// //

var u = import My/Lib/Utilities

// ................ Variables ................ //

var tt  = null
var bt  = null
var at = null

var pnl = null
var txt = null

var dataArr = [
^"☆#{0}#|#≈#{1}#|#▶#{2}",

^"####SPEED-O-METER####\n"+
^"#·##·##·##·##·##·##·#\n"+
^"#BES#{0} ({1}f)\n"+
^"#AVG#{2} ({3}f)\n"+
^"#CUR#{4} ({5}f)"
^]

var dataW = string.Size(
^             u.getLargestStr(
^                 string.Split(dataToString(""), "\n")))
var dataH = string.Split(dataToString(""),"\n").Count()

// ................ Functions ................ //

// DATA HANDLING

func updateData(mode)
  ?mode = "speedrun" // update every frame
    tt    = u.formatSpeedrun(totaltime)

    ?loc.begin | loc.loop
      bt  = u.formatSpeedrun(loc.bestTime)
      at = u.formatSpeedrun(loc.averageTime)

  : // update every second (30 frames)
    ?loc.begin | totaltime % u.sec = 0
      tt  = time.formatDigital(totaltime)

    ?loc.begin | loc.loop
      bt  = time.formatDigital(loc.bestTime)
      at = time.formatDigital(loc.averageTime)

func dataToString(mode)
  ?mode = "slim" | mode = "small"
    return string.Format(dataArr[0], bt,at,tt)
  :
    return string.Format(dataArr[1], bt, loc.bestTime,
    ^                                at, loc.averageTime,
    ^                                tt, totaltime)

// PRINT

func print(x, y, colorHex, mode)
  >`@x@,@y@,@colorHex@,@dataToString(mode)@

// UI

func uiMngr(x, y, colorHex, mode)
  /*?pnl & pnl.children
    >`1,9,#ff6666,Time/pnl children: @pnl.children.Count()@, 
    ^visible: @pnl.visible@, 
    ^parent is root: @pnl.parent = ui.root@*/

  ?canRegenUi()
    dlUi()
    // >c-10,1,#ff0000,dl Time

  ?canInitUi()
    mkUi(x,y,colorHex,mode)
    // >c-10,0,#00ff00,mk Time
  :
    updateUi(mode)
    // >c-10,0,#cyan,up Time

func canRegenUi()
  return pnl & (pnl.parent ! ui.root | pnl.children.Count() > 1)

func canInitUi()
  return !(pnl & txt)

func dlUi()
  ?pnl.children.Count() > 0 & txt
    pnl.Clear()
    txt = null
  :
    pnl.Recycle()
    pnl = null

func mkUi(x, y, colorHex, mode)
  // Panel presets
  var panelStyle  = -2

  // Textbox presets
  var dataStr = dataToString("")

  ?mode = "slim" | mode = "small"
    panelStyle = -1

    dataStr = dataToString(mode)
    dataW = string.Size(dataStr)
    dataH = 1

  txt = ui.AddText()
  txt.text = dataStr
  txt.x = 1
  txt.y = 1
  txt.w = dataW
  txt.h = dataH
  txt.anchor = "top_left"
  txt.dock = "top_left"
  txt.color = colorHex

  pnl = ui.AddPanel()
  pnl.x = x
  pnl.y = y
  pnl.w = dataW + 2
  pnl.h = dataH + 2
  pnl.anchor  = "bottom_left"
  pnl.dock    = "bottom_left"
  pnl.color   = colorHex
  pnl.style   = panelStyle

  pnl.Add(txt)

  pnl.visible = true

func updateUi(mode)
  ?txt
    txt.text = dataToString(mode)

  ?pnl
    pnl.visible = true
