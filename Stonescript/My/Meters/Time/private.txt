// ///////////////// IMPORTS ///////////////// //

var u = import My/Lib/Utilities

// ................ Variables ................ //

var tt  = null
var bt  = null
var at = null

var pnl = null
var txt = null

var dataArr = [
^"☆#{0}#|#≈#{1}#|#▶#{2}",

^"####SPEED-O-METER####\n"+
^"#·##·##·##·##·##·##·#\n"+
^"#BES#{0}\n"+
^"#AVG#{1}\n"+
^"#CUR#{2}"
^]

// ................ Functions ................ //

// DATA HANDLING

func updateData(mode)
  ?mode = "speedrun" // update every frame
    tt    = u.formatSpeedrun(totaltime)

    ?loc.begin | loc.loop
      bt  = u.formatSpeedrun(loc.bestTime)
      at = u.formatSpeedrun(loc.averageTime)

  : // update every second (30 frames)
    ?loc.begin | totaltime % u.sec = 0
      tt  = time.formatDigital(totaltime)

    ?loc.begin | loc.loop
      bt  = time.formatDigital(loc.bestTime)
      at = time.formatDigital(loc.averageTime)

func dataToString(mode)
  ?mode = "slim" | mode = "small"
    return string.Format(dataArr[0], bt,at,tt)
  :
    return string.Format(dataArr[1], bt,at,tt)

// PRINT

func print(x, y, colorHex, mode)
  >`@x@,@y@,@colorHex@,@dataToString(mode)@

// UI

func uiMngr(x, y, colorHex, mode)
  ?canInitUi()
    mkUi(x,y,colorHex,mode)
  /*:?canRegenUi()
    dlUi()
    mkUi(x,y,colorHex,mode)*/
  :
    updateUi(mode)

func canInitUi()
  return !(pnl & txt)
func canRegenUi()
  return (pnl | txt) & (totaltime % (2 * u.sec) = 0)

func dlUi()
  pnl.Remove(txt)
  txt = null
  pnl.Recycle()
  pnl = null

func mkUi(x, y, colorHex, mode)
  // Panel presets
  var panelStyle  = -2

  // Textbox presets
  var dataStr = dataToString(mode)
  var txtW = null
  var txtH = null

  ?mode = "slim" | mode = "small"
    panelStyle = -1
    txtW = string.Size(dataStr)
    txtH = 1
  :
    txtW = string.Size(
    ^         u.getLargestStr(
    ^             string.Split(dataStr, "\n")))

    txtH = string.Split(dataStr,"\n").Count()

  txt = ui.AddText()
  txt.text = dataStr
  txt.x = 1
  txt.y = 1
  txt.w = txtW
  txt.h = txtH
  txt.anchor = "top_left"
  txt.dock = "top_left"
  txt.color = colorHex

  pnl = ui.AddPanel()
  pnl.x = x
  pnl.y = y
  pnl.w = txt.w + 2
  pnl.h = txt.h + 2
  pnl.anchor  = "bottom_left"
  pnl.dock    = "bottom_left"
  pnl.color   = colorHex
  pnl.style   = panelStyle

  pnl.Add(txt)

func updateUi(mode)
  txt.text = dataToString(mode)

  // force visibility
  pnl.visible = true
  txt.visible = true