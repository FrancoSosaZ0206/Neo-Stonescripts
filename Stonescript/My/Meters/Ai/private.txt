// For info, see ./README.md

// Variables

var txt = null

// To format:
var dataStr = "AI#|[color={0}]{1}[/color]|[color={2}]{3}[/color]|[color={4}]{5}[/color]|[color={6}]{7}[/color]"

var dataLbls = ["enabled", "paused", "idle", "walking"]
var dataCols = ["ffffff","ffffff","ffffff","ffffff"]
var dataVals = [ai.enabled, ai.paused, ai.idle, ai.walking]

var dataStrPrint = ""

// Functions

func upData(mode)
  dataVals = [ai.enabled, ai.paused, ai.idle, ai.walking]

  // assigns individual color metadata for each value.
  ?mode = "ui"
    for i = 0 .. dataVals.Count() - 1
      // change color metadata based on value state
      ?dataVals[i]
        dataCols[i] = #666666 // grey
      :
        dataCols[i] = #ff00ff // magenta

  : // compose string
    dataStrPrint = "AI#|"
    var n = dataVals.Count() - 1
    for i = 0 .. n
      // change color metadata based on value state
      ?dataVals[i]
        dataStrPrint += string.ToUpper(dataLbls[i])
      :
        dataStrPrint += dataLbls[i]
      
      ?i < n
        dataStrPrint += "|"

func dataToString(mode)
  ?mode = "ui"
    return string.Format(dataStr,
    ^   dataCols[0], dataLbls[0],
    ^   dataCols[1], dataLbls[1],
    ^   dataCols[2], dataLbls[2],
    ^   dataCols[3], dataLbls[3]   )
  :
    return dataStrPrint

func print(x,y)
  >`@x@,@y@,#cyan,@dataToString("")@

// Main UI function
func uiMngr()
  ?canRegenUi()
    dlUi()

  ?canInitUi()
    mkUi()
  :
    upUi()

func canRegenUi()
  return txt & txt.parent ! ui.root

func canInitUi()
  return !txt

func dlUi()
  ?txt
    txt.Recycle()
    txt = null

func mkUi()
  var str = dataToString("ui")

  txt = ui.AddText(str)

  // define properties
  txt.x = 1
  // txt.y = 0
  txt.w = string.Size(str)
  // txt.h = 1
  txt.anchor = "center_left"
  txt.dock = "center_left"

func upUi()
  ?txt
    txt.text = dataToString("ui")
