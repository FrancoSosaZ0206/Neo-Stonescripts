//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "1-Rocky" ▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //

// //////////////// IMPORTS ///////////////// //

var uimkr = import My/Lib/UI_Maker
var u     = import My/Lib/Utilities
var c     = import My/Lib/Combat
var s     = import My/Lib/Stats
var a     = import My/Lib/Arsenal

// /////////////// VARIABLES //////////////// //

var yesButton     = null
var noButton      = null
var choice        = false
var buttonPressed = false
var dontShowAgain = false

var canDash = true
var stunTime = null

var weakenType = a.weaken_default
var hand       = null

var margin = 8 // big sword left hitbox + splash range

var boss_screen = null
var boss_cutscenes = [
^ 100, 101, 102, // getting soul stones pre-phase1
^ 117, 118, // finishing phase1 cutscene
^ 124, 125, // phase1 to 2
^ 107, 108, // phase2 to 3
^ 116] // phase3 death cutscene state

var nRuns = 1 // number of runs in this session
var permapotActTime = -1 // time when permapot was activated, -1 means not activated

var old_t = item.GetTreasureCount()
var enduse = 0

// /////////////// FUNCTIONS //////////////// //

func harvestFunc(button)
  buttonPressed = true
  ?button = yesButton
    choice = true
  : // button = noButton
    choice = false

func fight(mode)
  ?mode = "escape"
    canDash = false

    ?c.canUseAbility("mind")
      a.ldtF("mind")
    : // c.canUseAbility("staff_stone")
      c.useAbility_TH("staff_stone", a.stSh)

  :?mode = "evade"
    canDash = false

    ?c.canUseAbility("staff_stone") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      c.useAbility_TH("staff_stone", a.stSh)
    :?c.canUseAbility("mind") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      a.ldtF("mind")

    :?c.canUseAbility("staff_ice") & foe.distance < s.getRange("dash_min")
      c.useAbility_TH("staff_ice", a.stIh)

    :?!s.inRange("sword")
      ?foe.count > 1
        fight("magic")
      :
        fight("ranged")

    // Unmake
    :?c.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")
  :
    // 1. debuff, if possible
    a.smartDebuff()

    ?loc.stars <= 15 & !c.permapotSetup & c.canApplyWeaken()
      a.ldtF("sword debuff weaken")

    ?c.permapotSetup &
    ^a.canSmartDebuff() & foe = "elite"
      ?foe.GetCount(foe.distance + margin) > 1
        a.ldtF("magic debuff")
      :
        a.ldtF("sword debuff auto")
    :?!c.permapotSetup &
    ^a.canSmartDebuff() & foe = "elite" &
    ^foe.count = math.Clamp(foe.count, 2, 3)
      a.ldtF("magic debuff")

    :?(c.canApplyAny() | c.canApplyBurn()) &
    ^(loc.stars > 15 | c.permapotSetup) &
    ^(foe = "monarch" | foe = "boss") &
    ^mode = "melee"
      a.ldtF("sword debuff auto")

    // 2. Heal if needed
    :?hp ! maxhp &
    ^foe.GetCount(foe.distance + margin) = 1
      a.ldtF("sword heal")

    // 3. Unmake
    :?c.canUnmake()
      ?mode = "melee"
        a.ldtF("sword unmake")
      : // foe.GetCount(foe.distance + margin) > 1
        a.ldtF("magic unmake")

    : // 4. Deal max damage
      ?mode = "melee"
        /*?!c.permapotSetup & foe ! "phase2" & foe ! "phase3"
          c.burst(a.burstingSwords)
        :
          a.ldtF("sword dmg")*/
        a.ldtF("sword dmg")

      :?!c.permapotSetup
        a.ldtF("magic dmg")
      :
        a.ldtF("ranged dmg")

// /////////////// PROCEDURE //////////////// //

// ............ WITHDRAWAL LOGIC ............ //

?s.getTotalHP("player") <= s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl)
  loc.Leave()

// .............. SETUP LOGIC ............... //

// Auto-harvesting logic
?!buttonPressed
  u.showStrCtr(6,30,#yellow,"Harvest boulders?",false)

  ?!yesButton
    yesButton = uimkr.mkButton(
    ^-5,9,null,2,null,null, // x, y, w, h, anchor, dock,
    ^"Yes","#green", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound

  ?!noButton
    noButton = uimkr.mkButton(
    ^5,9,8,2,null,null, // x, y, w, h, anchor, dock,
    ^"No","red", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound
:
  ?yesButton
    yesButton.Recycle()
    yesButton = null
  ?noButton
    noButton.Recycle()
    noButton = null

  ?!dontShowAgain
    var aux = totaltime + 3*u.sec
    ?totaltime < aux
      ?choice
        u.showStrCtr(6, 30,#green,
        ^"Harvest boulders is enabled",false)
      :
        u.showStrCtr(6, 30,#red,
        ^"Harvest boulders is disabled",false)
    :
      ?!dontShowAgain
        dontShowAgain = true

?loc.loop
  nRuns++

  old_t = item.GetTreasureCount()
  enduse = 0

// Set up boss_screen
?!boss_screen
  ?loc.stars <= 10 // cyan and white
    boss_screen = 2
  :?loc.stars <= 15 // yellow
    boss_screen = 4
  :?loc.stars <= 20 // green
    boss_screen = 7

?nRuns = 1 & loc.stars > 15 & boss_screen
  c.permapotSetup = (screen.i >= boss_screen - 1)

// Record time when permapot was activated
?c.permapotSetup & permapotActTime = -1
  permapotActTime = totaltime

// BFG logic
?nRuns > 1
  c.screenMngr_DS("blade", 2, boss_screen - 3)
  ?c.canUseAbility_DS("blade")
    c.useAbility_DS("blade")

canDash = true

c.potionType = "lucky"
c.Init()
a.smartDebuff()
disable npcDialog

stunTime = s.getEffectStat("foe","debuff","stun","time") // frames
?!stunTime
  stunTime = -1

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

// Auto brewing
?c.canBrewPotion()
  c.brewPotion()
?c.canUsePotion() & c.permapotSetup
  activate potion

// Permapot equipment
?c.permapotSetup
  a.ldtF("permapot")

c.AAC(a.hVeff, a.sFeff)

// Initial equipments
?loc.begin
  a.ldtF("default")

// speed up (picking chest)
:?old_t ! item.GetTreasureCount() &
^c.canUseAbility("staff_fire") &
^!(loc.stars > 15 & nRuns = 1)
  enduse++

  ?c.canUseAbility("staff_fire") & enduse > 5
    c.useAbility_TH("staff_fire", a.stFh)
  :
    a.ldtF("defense armor regen")
    >c0,0,#red,ARMOR REGEN

// speed up (normal)
:?c.canUseAbility("staff_fire") &
^screen.i < boss_screen &
^(!s.inRange("dash") | foe.distance = 9999) &
^buffs.string ! "buff_inf_speed" &
// save armor if it's setup run
^!(loc.stars > 15 &
^(nRuns = 1 |
// Don't use it when facing the scout
^(nRuns > 1 & screen.i = 1 & foe = "scout" & foe.count = 1)))
  c.useAbility_TH("staff_fire", a.stFh)

// mini-dash
:?c.canUseAbility("quarterstaff") &
^!s.inRange("dash") & ai.walking &
^ai.enabled & !ai.paused &
^(c.permapotSetup |
^ (!c.permapotSetup & screen.i > 0))
  c.useAbility_TH("quarterstaff", a.myQ)

// Summons
:?c.canSummon("voidweaver") &
^loc.stars > 15 &
^(screen.i = 0 |
^screen.i = math.Clamp(screen.i, 2, boss_screen - 2)) // not a cutscene
  c.useAbility_OH("aether_talisman", "aether_talisman", hand)
:?c.canSummon("cinderwisp") &
^(loc.stars <= 15 | screen.i >= boss_screen - 1)
  c.useAbility_OH("fire_talisman", "fire_talisman", hand)

// Harvest/Pick up things
:?choice & harvest.distance < 5
  a.ldtF("harvest")
:?pickup.distance < 15
  a.ldtF("magnet")

// ............. DEFENSIVE LOGIC ............ //

// Unmake Dysangelos's fire arm
:?foe = "phase2" & foe = "fire" &
^foe.state = 32 & foe.time > 97
  a.ldtF("defense unmake")

// Dysangelos's massive beam or putting shield up
:?foe = "phase3" &
^((foe.state = 115 & foe.time > 70) |
^ (foe.damage = 1 &
^  ((foe.state = 32 & foe.time > 60) |
^   (foe.state = 33 & foe.time < 5))))
  // prevent the stun
  ?foe.damage = 1 & c.canUseAbility("staff_vigor")
    c.useAbility_TH("staff_vigor", a.stVh)
    // >c0,0,#red,PREVENT STUN
  : // evade attack
    fight("evade")

// Acronian Scout's wind and critical attack
:?foe = "scout" & foe.damage >= 8 & foe.state = 32
  fight("ranged") // fight ranged to avoid hit

// Normal attacks
:?foe.state = 32 & (
^(foe = "scout" & foe.time > 50) |
^((foe = "phase1" &
^  ((foe.debuffs.string = "chill:6" & foe.time > 60) |
^   (foe.debuffs.string ! "chill" & foe.time > 20))) |
^ (foe = "phase3" & foe.damage > 1 &
^   ((foe.debuffs.string = "chill:6" & foe.time > 85) |
^    (foe.debuffs.string ! "chill" & foe.time > 45  )))) |
^(foe ! "boss" &
^ foe.debuffs.string ! "stun" &
^ s.inRange("dash_min") &
^   ((foe.debuffs.string = "chill:6" & foe.time > 50) |
^    (foe.debuffs.string ! "chill" & foe.time > 10))
^))
  // reduce damage amap
  ?foe = "phase3" &
  ^(c.canUseAbility("mask") | c.canUseAbility("wand_poison"))
    ?c.canUseAbility("mask")
      c.useAbility_OH("mask", "mask", "r")
    : // c.canUseAbility("wand_poison")
      c.useAbility_OH("wand_poison", a.wPh, hand)

  // foe will break through armor
  :?armor < s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl) &
  ^(foe = "phase" | foe = "monarch")
    // Avoid hit entirely
    ?foe = "phase3" & foe.damage > 1 &
    ^foe.debuffs.string ! "feeble" &
    ^c.canUseAbility("staff_ice")
      c.useAbility_TH("staff_ice", a.stIh)
    : // Heal to reduce damage even more
      a.ldtF("defense heal")

  // Apply effects
  :?!c.permapotSetup
    // get additional damage
    ?buffs.string ! "buff_damage"
      a.ldtF("defense buff empower")
    // af shields deal more DoT than any other fire debuff weapon.
    :?c.canApplyBurn()
      a.ldtF("defense debuff burn")
    // ai shields' chill duration is longer than any other ice weapon.
    :?c.canEngage() & c.canApplyChill(1)
      a.ldtF("defense debuff chill")
    : // all effects applied
      a.ldtF("defense")

  : // c.permapotSetup
    a.ldtF("defense")

// .......... ENGAGE/WALKING LOGIC .......... //

// Dysangelos pre-phase1 cutscene damage strat
:?!c.permapotSetup &
^[100, 101, 102].Contains(foe.state) &
^(item.GetCooldown("heavy_hammer") <= 0 |
^ c.isCasting("heavy_hammer"))
  ?c.canUseAbility("heavy_hammer")
    c.useAbility_TH("heavy_hammer", Mjölnir)
  :
    a.ldtF("defense armor regen")

:?(!c.permapotSetup &
^[118, 124, 108].Contains(foe.state) &
^item.GetCooldown("bardiche") <= 0) |
^c.isCasting("bardiche")
  ?c.canUseAbility("quarterstaff")
    c.useAbility_TH("quarterstaff", a.myQ)
  :?a.canSmartDash()
    a.smartDash()
  : // c.canUseAbility("bardiche")
    c.useAbility_TH("bardiche", Kubikiribocho)

:?ai.walking & !s.inRange("crossbow")
  ?armor > a.compoundMaxArmor_boosted |
  ^c.canEngage()
    a.ldtF("engage")
  :
    a.ldtF("defense armor regen")

:?ai.paused | !ai.enabled
  a.ldtF("defense armor regen")

// .............. COMBAT LOGIC .............. //

// Voidweaver - use it if possible
:?c.canUseAbility("voidweaver") &
^foe.count > 1 & !c.permapotSetup &
^c.canUnmakeVoidweaver()
  ?c.canUseAbility("dash")
    a.ldtF("dash")
  :?!s.inRange("sword")
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    equipR @a.shC2@
  :
    c.devour("voidweaver")

:?a.canSmartDash() & canDash
  a.smartDash()
// if in range, get closer while trying to unmake with repeating bow
:?canDash & foe.distance =
^   math.Clamp(foe.distance,
^              s.getRange("dash_max") + 1,
^              s.getRange("crossbow"))
  ?!c.permapotSetup
    c.smoothCast(a.bR)
  :
    a.ldtF("defense armor regen")

// Calamity - reduce hp
:?c.canUseAbility("wand_aether") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ foe.buffs.string = "buff_tenacious")
  c.useAbility_OH("wand_aether", a.wAh, hand)
// Reset buff
:?foe.buffs.string = "stoic" &
^c.canUseAbility("wand_vigor")
  c.useAbility_OH("wand_vigor", a.wVh, hand)
// Reduce damage
:?c.canUseAbility("wand_poison") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ foe.buffs.string = "buff_tenacious")
  c.useAbility_OH("wand_poison", a.wPh, hand)
// Stun enemies
:?c.canApplyStun() & foe = "elite" &
^foe.count > 1 &
^s.getTotalHP("player") < c.midhp &
^c.canUseAbility("wand_ice")
  c.useAbility_OH("wand_ice", a.wIh, hand)

// Knockback farming
/* :?c.canKbFarm()
  >c0,0,#red,KNOCKBACK FARMING
  c.smoothCast(a.bS) */

// AOE Strat
:?foe.GetCount(foe.distance + margin) > 1
  // Align foes
  /*?c.canUseAbility("wand_stone")
    c.useAbility_OH("wand_stone", a.wSh, hand)*/

  ?c.canUseAbility("heavy_hammer") & foe = "elite"
    ?encounter.eliteMod = "plated"
      c.useAbility_TH("heavy_hammer", "Guardian's Bane")
    :
      c.useAbility_TH("heavy_hammer", Mjölnir)

  // Perma-stun
  :?s.inRange("grappling_hook") &
  ^(c.canApplyStun() |
  ^(stunTime = math.Clamp(stunTime, 1, 11) & // frames
  ^foe.debuffs.string ! "debuff_armor_fatigue"))
    a.ldtF("grappling")

  :?nRuns = 1
    /*?c.canEscape()
      fight("escape")
    :
      >c0,0,#red,FIGHTING RANGED
      fight("ranged")*/
    a.ldtF("big sword unmake")
  // Debuff and unmake
  :?encounter.eliteMod = "blessed" |
  ^foe.buffs.string = "buff_tenacious"
    >c0,0,#yellow,BLESSED/TENACIOUS STRAT

    a.smartDebuff()
    ?a.canSmartDebuff()
      a.ldtF("magic debuff")
    :
      a.ldtF("big sword unmake")
  :
    equip Kubikiribocho

:?foe = "phase" // Dysangelos fight logic
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Default) // reached ignition cap
    c.devour("cinderwisp")

  ?foe ! "phase3"
    ?foe.buffs.string = "buff_protection" & // against debuffs
    ^c.canUseAbility("wand_vigor")
      c.useAbility_OH("wand_vigor", a.wVh, hand)
    :
      fight("melee")

  : // foe = phase3
    canDash = true

    ?c.canUsePotion()
      activate potion
    :?c.canUseAbility("staff_poison") & !s.inRange("dash")
      c.useAbility_TH("staff_poison", a.stPh)
    :?c.canUseAbility("heavy_hammer") & foe.armor > 0 & // reduce armor
    ^!c.permapotSetup & s.inRange("dash_min")
      c.useAbility_TH("heavy_hammer", "Guardian's Bane")
    :
      // Buy time
      ?c.permapotSetup &
      ^(totaltime - permapotActTime
      ^<
      ^loc.averageTime - (loc.averageTime / 10))
        // Debuff
        ?c.canApplyChill(6)
          a.ldtF("sword debuff chill")
        :?c.canApplyWeaken()
          a.ldtF("sword debuff weaken")
        // Heal
        :?hp ! maxhp
          a.ldtF("sword heal")
        : // wait
          equipL sword 0*
          equipR mask
      :
        fight("melee")

: // 1v1
  // Tanky foe, use bardiche ability to lower its hitpoints
  ?(foe = "scout" | foe = "monarch") &
  ^foe.GetCount(foe.distance + margin) = 1 &
  ^s.inRange("sword") &
  ^(c.canUseAbility("bardiche") |
  ^c.canUseAbility("staff_poison"))
    ?c.canUseAbility("staff_poison")
      c.useAbility_TH("staff_poison", a.stPh)
    : // c.canuseAbility("bardiche")
      c.useAbility_TH("bardiche", Kubikiribocho)
  :
    fight("melee")

//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ END OF "1-Rocky" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //