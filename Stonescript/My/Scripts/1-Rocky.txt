//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "1-Rocky" ▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //


// //////////////// IMPORTS ///////////////// //

var uimkr = import My/Lib/UI_Maker
var u     = import My/Lib/Utilities
var c     = import My/Lib/Combat
var s     = import My/Lib/Stats
var a     = import My/Lib/Arsenal


// /////////////// VARIABLES //////////////// //

var yesButton     = null
var noButton      = null
var choice        = false
var buttonPressed = false
var dontShowAgain = false

var canDash = true

var weakenType = a.weaken_default
var hand       = null

var margin = 8 // big sword left hitbox + splash range

var dysan_screen = null
var dysan_cutscenes = [
^ 100, 101, 102, // getting soul stones pre-phase1
^ 117, 118, // finishing phase1 cutscene
^ 124, 125, // phase1 to 2
^ 107, 108, // phase2 to 3
^ 116] // phase3 death cutscene state


// /////////////// FUNCTIONS //////////////// //

func harvestFunc(button)
  buttonPressed = true
  ?button = yesButton
    choice = true
  : // button = noButton
    choice = false

func fight(mode)
  ?mode = "evade"
    canDash = false

    ?c.canUseAbility("mind") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      a.ldtF("mind")
    :?c.canUseAbility("staff_stone") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      c.useAbility_TH("staff_stone", a.stSh)

    :?c.canUseAbility("staff_ice") & foe.distance < s.getRange("dash_min")
      c.useAbility_TH("staff_ice", a.stIh)

    :?!s.inRange("sword")
      ?foe.count > 1
        fight("magic")
      :
        fight("ranged")

    // Unmake
    :?c.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")
  :
    // 1. debuff, if possible
    ?(foe = "elite" | foe = "boss") &
    ^(c.canApplyAny() |
    ^(mode ! "melee" & a.canSmartDebuff()))
      ?mode = "melee" & c.canApplyBurn()
        a.ldtF("sword debuff")
      :?c.permapotSetup
        a.ldtF("magic debuff")
      :
        a.ldtF("ranged debuff")

      /*:?mode = "magic"
        a.ldtF("magic debuff")
      :?mode = "ranged"
        a.ldtF("magic debuff") // ranged*/

    // 2. Heal if needed
    :?hp ! maxhp
    // ****************************** //
    ^& foe.count = 1
      a.ldtF("sword heal")
    // ****************************** //

      /*?mode = "melee"
        a.ldtF("sword heal")
      :?mode = "magic"
        a.ldtF("magic heal")
      :?mode = "ranged"
        a.ldtF("ranged heal")*/

    // 3. Unmake
    :?c.canUnmake()
      ?mode = "melee"
        a.ldtF("sword unmake")

      :?c.permapotSetup
        // Big sword splash area
        ?a.canSmartDash() // get closer
          a.smartDash()
        : // attack
          a.ldtF("big sword unmake")
      : // !c.permapotSetup
        ?foe.count = 1
          a.ldtF("sword unmake")
        :
          a.ldtF("ranged unmake")

      /*?mode = "melee"
        a.ldtF("sword unmake")
      :?mode = "magic"
        a.ldtF("magic unmake")
      :?mode = "ranged"
        a.ldtF("ranged unmake")*/

    : // 4. Deal max damage
      ?mode = "melee"
        /*?!c.permapotSetup & foe ! "phase2" & foe ! "phase3"
          c.burst(a.burstingSwords)
        :
          a.ldtF("sword dmg")*/
        a.ldtF("sword dmg")

      :?!c.permapotSetup
        a.ldtF("magic dmg")
      :
        a.ldtF("ranged dmg")

      /*:?mode = "magic"
        a.ldtF("magic dmg")
      :?mode = "ranged"
        a.ldtF("ranged dmg")*/


// /////////////// PROCEDURE //////////////// //

/*?((foe.state = 2 | foe.state = -1) &
^ foe.distance = math.Clamp(foe.distance, 16, 17) &
^ ai.walking & ai.enabled &
^ !(ai.paused | ai.idle)) &
^foe.debuffs.string = "chill:1"
  >c0,0,#cyan,ai debuffed!*/

// ............ WITHDRAWAL LOGIC ............ //

?c.permapotSetup &
^foe.buffs.string = "buff_tenacious"
  loc.Leave()

// .............. SETUP LOGIC ............... //

c.potionType = "lucky"
c.smiteScreen_Target = 2
c.Init()
a.smartDebuff()
disable npcDialog

// Auto-harvesting logic
?!buttonPressed
  u.showStrCtr(6,30,#yellow,"Harvest boulders?",false)

  ?!yesButton
    yesButton = uimkr.mkButton(
    ^-5,9,null,2,null,null, // x, y, w, h, anchor, dock,
    ^"Yes","#green", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound

  ?!noButton
    noButton = uimkr.mkButton(
    ^5,9,8,2,null,null, // x, y, w, h, anchor, dock,
    ^"No","red", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound
:
  ?yesButton
    yesButton.Recycle()
    yesButton = null
  ?noButton
    noButton.Recycle()
    noButton = null

  ?!dontShowAgain
    var aux = totaltime + 3*u.sec
    ?totaltime < aux
      ?choice
        u.showStrCtr(6, 30,#green,
        ^"Harvest boulders is enabled",false)
      :
        u.showStrCtr(6, 30,#red,
        ^"Harvest boulders is disabled",false)
    :
      ?!dontShowAgain
        dontShowAgain = true


// Set up dysan_screen
?!dysan_screen
  ?loc.stars <= 10 // cyan and white
    dysan_screen = 2
  :?loc.stars <= 15 // yellow
    dysan_screen = 4
  :?loc.stars <= 20 // green
    dysan_screen = 7

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

c.smiteScreen_Max = 5
c.screenChange_DS("blade")
c.AAC(a.hVeff, a.sFeff)

// Auto brewing
?c.canBrewPotion()
  c.brewPotion()

// Initial equipments
?loc.begin
  a.ldtF("default")
:?c.permapotSetup
  a.ldtF("permapot")

?c.canUsePotion() & c.permapotSetup
  activate potion
:?c.canUseAbility_DS("blade") & loc.stars > 15
  c.useAbility_DS("blade")

// ***************************************** //

var old_t = item.GetTreasureCount()
var enduse = 0
?loc.loop 
  old_t = item.GetTreasureCount()
  enduse = 0

>c-10,-3,#magenta,
^old_t#=#@old_t@\n
^treasures#=#@item.GetTreasureCount()@\n
^counter###=#@enduse@\n\n

?old_t ! item.GetTreasureCount()
  enduse++
  >c-10,0,#rainFF,+1 chest!\n\n
  ^DYSAN DEAD!!!

// speed up
:?item.GetCooldown("staff_fire") <= 0 &
^old_t ! item.GetTreasureCount() &
^enduse >= 30
  c.useAbility_TH("staff_fire", a.stFh)

:?c.canUseAbility("staff_fire") &
^screen.i < dysan_screen & ai.walking &
^(foe.distance < s.getRange("dash_min") |
^ foe.distance = 9999) &
^buffs.string ! "buff_inf_speed" &
// save armor if it's setup run
^!(loc.stars > 15 & c.permapotSetup)
  c.useAbility_TH("staff_fire", a.stFh)
// ***************************************** //

// mini-dash
:?c.canUseAbility("quarterstaff") &
^!s.inRange("dash") & ai.walking &
^ai.enabled & !ai.paused &
^(c.permapotSetup |
^ (!c.permapotSetup & screen.i > 0))
  c.useAbility_TH("quarterstaff", a.myQ)

// Summons
:?c.canSummon("voidweaver") &
^(loc.stars > 15 &
^((!((foe = "boss" | foe = "monarch") &
^    foe.count = 1) &
^   screen.i < dysan_screen) | // not a cutscene
^   screen.i = 0))
  c.useAbility_OH("aether_talisman", "aether_talisman", hand)
:?c.canSummon("cinderwisp") &
^(loc.stars <= 15 |
^ (foe = "boss" | foe = "monarch") &
^  foe.count = 1)
  c.useAbility_OH("fire_talisman", "fire_talisman", hand)

// Harvest/Pick up things
:?choice & harvest.distance < 5
  a.ldtF("harvest")
:?pickup.distance < 15
  a.ldtF("magnet")

// ............. DEFENSIVE LOGIC ............ //

// Unmake Dysangelos's fire arm
:?foe = "phase2" & foe = "fire" &
^foe.state = 32 & foe.time > 97
  a.ldtF("defense unmake")

// Dysangelos's massive beam or putting shield up
:?foe = "phase3" &
^((foe.state = 115 & foe.time > 70) |
^ (foe.damage = 1 &
^  ((foe.state = 32 & foe.time > 60) |
^   (foe.state = 33 & foe.time < 5))))
  // prevent the stun
  ?foe.damage = 1 & c.canUseAbility("staff_vigor")
    c.useAbility_TH("staff_vigor", a.stVh)
    >c0,0,#red,PREVENT STUN
  : // evade attack
    fight("evade")

// Acronian Scout's wind and critical attack
:?foe = "scout" & foe.damage >= 8 & foe.state = 32
  fight("ranged") // fight ranged to avoid hit

// Normal attacks
:?foe.state = 32 & (
^(foe = "scout" & foe.time > 50) |
^((foe = "phase1" & foe.time > 60) |
^ (foe = "phase3" & foe.time > 85 & foe.damage > 1)) |
^(foe ! "boss" & foe.time > 50 &
^ foe.debuffs.string ! "stun"))
  // reduce damage amap
  ?foe = "phase3" &
  ^(c.canUseAbility("mask") | c.canUseAbility("wand_poison"))
    ?c.canUseAbility("mask")
      c.useAbility_OH("mask", "mask", "r")
    : // c.canUseAbility("wand_poison")
      c.useAbility_OH("wand_poison", a.wPh, hand)

  // foe will break through armor
  :?armor < s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl)
    // Avoid hit entirely
    ?foe = "phase3" & foe.damage > 1 &
    ^foe.debuffs.string ! "feeble" &
    ^c.canUseAbility("staff_ice")
      c.useAbility_TH("staff_ice", a.stIh)
    : // Heal to reduce damage even more
      a.ldtF("defense heal")

  // Apply effects
  :?!c.permapotSetup
    // get additional damage
    ?buffs.string ! "buff_damage"
      a.ldtF("defense buff empower")
    // af shields deal more DoT than any other fire debuff weapon.
    :?c.canApplyBurn()
      a.ldtF("defense debuff burn")
    // ai shields' chill duration is longer than any other ice weapon.
    :?c.canEngage() & c.canApplyChill(1)
      a.ldtF("defense debuff chill")
    : // all effects applied
      a.ldtF("defense")

  : // c.permapotSetup
    a.ldtF("defense")

// ............ AOE/RANGED LOGIC ............ //

:?c.canUseAbility("voidweaver") &
^foe.count > 1 & !c.permapotSetup &
^c.canUnmakeVoidweaver()
  ?c.canUseAbility("dash")
    a.ldtF("dash")
  :?c.canUseAbility("bash")
    a.ldtF("bash")
  :?!s.inRange("sword")
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    equipR @a.shC2@
  :
    c.devour("voidweaver")

// Calamity - reduce hp
:?c.canUseAbility("wand_aether") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_aether", a.wAh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@
// reset buffs
:?foe.buffs.string = "stoic" &
^c.canUseAbility("wand_vigor")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_vigor", a.wVh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@
// hinder regen
:?encounter.eliteMod = "regen" &
^c.canUseAbility("wand_fire")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_fire", a.wFh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@

// Knockback farming
:?foe ! "unpushable" &
^c.canSmoothCast() &
^s.inRange("crossbow")
  ?a.canSmartDash()
    a.smartDash()
  : // c.canSmoothCast()
    c.smoothCast(a.bS)

:?loc.stars > 15 & (
^(c.permapotSetup &
^(foe.GetCount(foe.distance + margin) > 1 &
^s.inRange("wand") & foe ! "warcaster")) |
^(!c.permapotSetup &
^foe.count > 1 & s.inRange("crossbow")))
  ?c.canUseAbility("wand_stone")
    c.useAbility_OH("wand_stone", a.wSh, hand)

  :?foe ! "elite"
    ?a.canSmartDash()
      a.smartDash()

    :?c.canApplyStun()
      a.ldtF("grappling")
    :?c.permapotSetup
      a.ldtF("big sword unmake")
    :?foe.GetCount(foe.distance + margin) > 1
      a.ldtF("ranged unmake")
    :
      a.ldtF("sword unmake")

  : // foe = "elite"
    ?c.canUseAbility("heavy_hammer")
      ?a.canSmartDash()
        a.smartDash()
      :?!s.inRange("triskelion")
        equipL triskelion
      :
        c.useAbility_TH("heavy_hammer", "Guardian's Bane")

    :?foe.distance < s.getRange("dash_min") &
    ^!c.isEquipped(a.bsAeff) &
    ^c.canUseAbility("mind")
      a.ldtF("mind")
    :?foe.distance < s.getRange("dash_min") &
    ^!c.isEquipped(a.bsAeff) &
    ^c.canUseAbility("staff_stone")
      c.useAbility_TH("staff_stone", a.stSh)

    :?c.canApplyStun() & foe = "soldier"
      a.ldtF("grappling")
    :?foe.GetCount(foe.distance + margin) > 1
      fight("ranged")
    :
      fight("melee")

// .......... ENGAGE/WALKING LOGIC .......... //

// Dysangelos pre-phase1 cutscene damage strat
/*:?!c.permapotSetup &
^[100, 101, 102, 126, 127, 116,
^ 117, 118].Contains(foe.state) &
^foe ! "phase3" & screen.i = dysan_screen // &
// ^(item.GetCooldown("bardiche") <= 0 | c.isCasting("bardiche"))
  ?c.canUseAbility("heavy_hammer")
    c.useAbility_TH("heavy_hammer", Mjölnir)
  :?foe.distance <= 18
    ?c.canUseAbility("quarterstaff")
      c.useAbility_TH("quarterstaff", a.myQ)
    :?a.canSmartDash()
      a.smartDash()
    :?c.canUseAbility("staff_aether")
      c.useAbility_TH("staff_aether", a.stAh)
    :?(item.GetCooldown("bardiche") <= 0 |
    ^  c.isCasting("bardiche")) &
    ^ buffs.string = "buff_range"
      c.useAbility_TH("bardiche", Kubikiribocho)
    :
      ?a.compoundMaxArmor_default <= armor &
      ^armor <= a.compoundMaxArmor_boosted
        a.ldtF("defense regen max")
      :
        a.ldtF("defense regen fast")
  :
    ?a.compoundMaxArmor_default <= armor &
    ^armor <= a.compoundMaxArmor_boosted
      a.ldtF("defense regen max")
    :
      a.ldtF("defense regen fast")

  >c0,0,#red,DAMAGING IN CUTSCENE!!!
*/

:?ai.paused | !ai.enabled | ai.paused |
^(ai.idle & foe.distance > s.getRange("dash_min")) | // waiting for animation to complete
^c.isDead() |
^ (dysan_cutscenes.Contains(foe.state) & // is a cutscene
^ foe.damage > 1) | // dysan state 107 fight (flying)
^foe.distance > s.getRange("dash_max") | // too far to dash
^foe.state = -1 | // sleep state
^foe.state = 2 // engaging state
  ?armor > a.compoundMaxArmor_boosted |
  ^c.canEngage()
    a.ldtF("engage")

  :?a.compoundMaxArmor_default <= armor &
  ^armor <= a.compoundMaxArmor_boosted
    a.ldtF("defense regen max")
  :
    a.ldtF("defense regen fast")

// .............. COMBAT LOGIC .............. //

:?a.canSmartDash() & canDash
  a.smartDash()

:?foe = "phase" // Dysangelos fight logic
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Boosted) // reached ignition cap
    c.devour("cinderwisp")

  ?foe ! "phase3"
    ?foe.buffs.string = "buff_protection" & // against debuffs
    ^c.canUseAbility("wand_vigor")
      c.useAbility_OH("wand_vigor", a.wVh, hand)
    :
      fight("melee")

  : // foe = phase3
    canDash = true

    ?c.canUsePotion()
      activate potion
    :?c.canUseAbility("staff_poison") & !s.inRange("dash")
      c.useAbility_TH("staff_poison", a.stPh)
    /*:?c.canUseAbility("wand_ice") & !s.inRange("dash")
      c.useAbility_OH("wand_ice", a.wIh, hand)
    :?c.canUseAbility("wand_fire") & !s.inRange("dash")
      c.useAbility_OH("wand_fire", a.wFh, hand)*/
    :?c.canUseAbility("heavy_hammer") & foe.armor > 0 & // reduce armor
    ^!c.permapotSetup & s.inRange("dash_min")
      c.useAbility_TH("heavy_hammer", "Guardian's Bane")
    :
      fight("melee")

: // 1v1
  ?c.canUseAbility("staff_poison") &
  ^!c.permapotSetup & s.getTotalHP("foe") > 1000
    c.useAbility_TH("staff_poison", a.stPh)
  /*:?c.canUseAbility("wand_ice")
    c.useAbility_OH("wand_ice", a.wIh, hand)*/
  :
    fight("melee")


//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ END OF "1-Rocky" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //