//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "1-Rocky" ▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //


// //////////////// IMPORTS ///////////////// //

var uimkr = import My/Lib/UI_Maker
var u     = import My/Lib/Utilities
var c     = import My/Lib/Combat
var s     = import My/Lib/Stats
var a     = import My/Lib/Arsenal


// /////////////// VARIABLES //////////////// //

var yesButton     = null
var noButton      = null
var choice        = false
var buttonPressed = false
var dontShowAgain = false

var weakenType = a.weaken_default
var potionType = "lucky"
var hand       = null

var margin = 8 // wand left hitbox + splash range

var isDysanCutscene =
^ foe.state = 107 | // flying and getting stones
^ foe.state = 124 | foe.state = 125 | // dysangelos phase1 to 2
^ foe.state = 108 | // phase2 to 3
^ foe.state = 116 | // phase3 death animation state


// /////////////// FUNCTIONS //////////////// //

func harvestFunc(button)
  buttonPressed = true
  ?button = yesButton
    choice = true
  : // button = noButton
    choice = false

func fight(mode)
  ?mode = "evade"
    ?c.canUseAbility("mind") & (foe ! "ranged" | foe = "phase")
      a.ldtF("mind")
    :?c.canUseAbility("staff_stone") & (foe ! "ranged" | foe = "phase")
    ^& foe.distance < s.dash_range_min
      c.useAbility_TH(a.staffStoneHidden)

    :?c.canUseAbility("staff_ice") &
    ^foe.distance < s.dash_range_min
      c.useAbility_TH(a.staffIceHidden)

    :?foe.distance > s.getRange("sword")
      ?foe.count > 1
        fight("magic")
      :
        fight("ranged")

    // Unmake
    :?foe ! "boss" & !(
    ^encounter.eliteMod = "tenacious" |
    ^(encounter.eliteMod = "monarch" & foe.count = 1))
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")

  :
    // 1. debuff, if possible
    ?c.canDebuffAny() & !(
    ^encounter.eliteMod = "tenacious" |
    ^foe.buffs.string = "buff_protection")
      ?mode = "melee"
        a.ldtF("melee 1v1 debuff")
      :?c.isPermapotSetup
        a.ldtF("magic debuff")
      :
        a.ldtF("ranged debuff")

      /*:?mode = "magic"
        a.ldtF("magic debuff")
      :?mode = "ranged"
        a.ldtF("magic debuff") // ranged*/

    // 2. Heal if needed
    :?hp ! maxhp
      a.ldtF("melee 1v1 heal")

      /*?mode = "melee"
        a.ldtF("melee 1v1 heal")
      :?mode = "magic"
        a.ldtF("magic heal")
      :?mode = "ranged"
        a.ldtF("ranged heal")*/

    // 3. Unmake
    :?foe ! "boss" & !(
    ^encounter.eliteMod = "tenacious" |
    ^(encounter.eliteMod = "monarch" & foe.GetCount(foe.distance + margin) = 1))
      ?mode = "melee"
        a.ldtF("melee 1v1 unmake")
      :?c.isPermapotSetup
        a.ldtF("magic unmake")
      :
        a.ldtF("ranged unmake")

      /*:?mode = "magic"
        a.ldtF("magic unmake")
      :?mode = "ranged"
        a.ldtF("ranged unmake")*/

    : // 4. Deal max damage
      ?mode = "melee"
        /*?!c.isPermapotSetup & foe ! "phase2" & foe ! "phase3"
          c.doBursting(a.burstingSwords)
        :*/
          a.ldtF("melee 1v1 dmg")
      :?!c.isPermapotSetup
        a.ldtF("magic dmg")
      :
        a.ldtF("ranged dmg")

      /*:?mode = "magic"
        a.ldtF("magic dmg")
      :?mode = "ranged"
        a.ldtF("ranged dmg")*/


// /////////////// PROCEDURE //////////////// //

?foe = "phase3" & foe.state = 32
  >c0,0,#red,DMG = @foe.damage@

// ............ WITHDRAWAL LOGIC ............ //

?c.isPermapotSetup &
^encounter.eliteMod = "tenacious"
  loc.Leave()

// .............. SETUP LOGIC ............... //

c.Init()
c.smiteScreen_Target = 2

disable npcDialog

// Auto-harvesting logic
?!buttonPressed
  u.showStrCtr(6,30,#yellow,"Harvest boulders?",false)

  ?!yesButton
    yesButton = uimkr.mkButton(
    ^-5,9,null,2,null,null, // x, y, w, h, anchor, dock,
    ^"Yes","#green", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound

  ?!noButton
    noButton = uimkr.mkButton(
    ^5,9,8,2,null,null, // x, y, w, h, anchor, dock,
    ^"No","red", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvestFunc, // style, pressed,
    ^null,null,null) // down, up, sound
:
  ?yesButton
    yesButton.Recycle()
    yesButton = null
  ?noButton
    noButton.Recycle()
    noButton = null

  ?!dontShowAgain
    var aux = totaltime + 3*u.sec
    ?totaltime < aux
      ?choice
        u.showStrCtr(6, 30,#green,
        ^"Harvest boulders is enabled",false)
      :
        u.showStrCtr(6, 30,#red,
        ^"Harvest boulders is disabled",false)
    :
      ?!dontShowAgain
        dontShowAgain = true


// Decide hand for one-handed items
?c.isPermapotSetup | c.isDashingRange()
  hand = "left"
:
  hand = "right"

c.smiteScreen_Max = 4
c.screen_DS_Change("blade")
c.doAAC(a.hammerFireDefense, a.shieldFireDefense)

// Auto brewing
?c.canBrewPotion(potionType)
  c.brewPotion(potionType)

// Initial equipments
?loc.begin
  a.ldtF("default")
:?c.isPermapotSetup
  a.ldtF("permapot")

?c.canUsePotion(potionType) & c.isPermapotSetup
  activate potion
?c.canUseAbility_DS("blade") & loc.stars > 15
  c.useAbility_DS("blade")

// Harvest/Pick up things
?choice & harvest.distance < 5
  a.ldtF("harvest")
:?pickup.distance < 15
  a.ldtF("magnet")

// speed up
:?c.canUseAbility("staff_fire") &
^ai.enabled & !ai.paused & ai.walking &
^foe.state ! 116 &
^foe.distance = 9999 &
^(buffs.string ! "buff_inf_speed" | screen.i = 0)
  c.useAbility_TH(a.staffFireHidden)
// mini-dash
:?c.canUseAbility("quarterstaff") &
^ai.walking & !c.isDashingRange() &
^ai.enabled & !ai.paused
  c.useAbility_TH(a.myQuarterstaff)

// Summons
:?c.canSummon("aether_talisman") &
^loc.stars > 15 &
^!((foe = "boss" | encounter.eliteMod = "monarch") &
^   foe.count = 1) &
^!(foe = "phase" & (foe.state = -1 | isDysanCutscene))
  c.useAbility_OH("aether_talisman", hand)
:?c.canSummon("fire_talisman") &
^foe = "boss" & foe.count = 1
  c.useAbility_OH("fire_talisman", hand)

// ............. DEFENSIVE LOGIC ............ //

// Unmake Dysangelos's fire arm
:?foe = "phase2" & foe = "fire" &
^foe.state = 32 & foe.time > 97
  a.ldtF("defense unmake")

// Dysangelos's massive beam or putting shield up
:?foe = "phase3" &
^((foe.state = 115 & foe.time > 70) |
^ (foe.state = 32 & foe.time > 50 & foe.damage <= 1))
  // prevent the stun
  ?foe.damage = 1 & c.canUseAbility("staff_vigor")
    c.useAbility_TH(a.staffVigorHidden)
  : // evade attack
    fight("evade")
    
// Acronian Scout's wind and critical attack
:?foe = "scout" & foe.damage >= 8 & foe.state = 32
  fight("ranged") // fight ranged to avoid hit

// Normal attacks
:?foe.state = 32 & (
^(foe = "scout" & foe.time > 50) |
^((foe = "phase1" & foe.time > 60) |
^ (foe = "phase3" & foe.time > 85 & foe.damage > 1)) |
^(foe ! "boss" & foe.time > 50))
  // reduce damage amap
  ?foe = "phase3" &
  ^(c.canUseAbility("mask") | c.canUseAbility("wand_poison"))
    ?c.canUseAbility("mask")
      c.useAbility_OH("mask", "r")
    :?c.canUseAbility("wand_poison")
      c.useAbility_OH(a.wandPoisonHidden, hand)

  // foe will break through armor
  :?armor < c.getFoeDamage(weakenType, a.mask_feebleCount)
    // Avoid hit entirely
    ?foe = "phase3" & foe.damage > 1 &
    ^foe.debuffs.string ! "feeble" &
    ^c.canUseAbility("staff_ice")
      c.useAbility_TH(a.staffIceHidden)
    : // Heal to reduce damage even more
      a.ldtF("defense heal")

  // Apply effects
  :?!c.isPermapotSetup
    // get additional damage
    ?buffs.string ! "buff_damage"
      a.ldtF("defense buff empower")
    // af shields deal more DoT than any other fire debuff weapon.
    :?c.canApplyBurn() & encounter.eliteMod ! "tenacious"
      a.ldtF("defense debuff burn")
    // ai shields' chill duration is longer than any other ice weapon.
    :?!(foe.debuffs.string = "chill" |
    ^foe = "immune_to_debuff_chill" |
    ^encounter.eliteMod = "tenacious")
      a.ldtF("defense debuff chill")
    : // all effects applied
      a.ldtF("defense")

  : // c.isPermapotSetup
    a.ldtF("defense")

// ............ AOE/RANGED LOGIC ............ //

:?c.canUseAbility("voidweaver") & foe.count > 1
  ?c.canUseAbility("dash")
    a.ldtF("dash")
  :?c.canUseAbility("bash")
    a.ldtF("bash")
  :
    c.devour("voidweaver")

:?loc.stars > 15 & (
^(c.isPermapotSetup &
^(foe.GetCount(foe.distance + margin) > 1 &
^foe.distance <= s.getRange("wand") & foe ! "warcaster")) |
^(!c.isPermapotSetup &
^foe.count > 1 & foe.distance <= s.getRange("crossbow rune")))
  ?!encounter.isElite
    ?c.canUseAbility("bash")
      a.ldtF("bash")
    :?c.canUseAbility("dash")
      a.ldtF("dash")

    :?c.isPermapotSetup &
    ^foe.debuffs.string ! "stun" 
      equipL grappling
    :?c.isPermapotSetup
      a.ldtF("magic unmake")
    :
      a.ldtF("ranged unmake")

  : // enconuter.isElite
    ?c.canUseAbility("heavy_hammer")
      c.useAbility_TH("Guardian's Bane")

    // Calamity - reduce hp
    :?encounter.eliteMod ! "tenacious" &
    ^c.canUseAbility("wand_aether")
      c.useAbility_OH(a.wandAetherHidden, hand)

    // reset buffs
    :?encounter.eliteMod = "stoic" &
    ^c.canUseAbility("wand_vigor")
      c.useAbility_OH(a.wandVigorHidden, hand)

    // hinder regen
    :?encounter.eliteMod = "regen" &
    ^c.canUseAbility("wand_fire")
      c.useAbility_OH(a.wandFireHidden, hand)

    // align foes
    :?foe.distance <= s.getRange("wand") &
    ^c.canUseAbility("wand_stone") & !encounter.isElite
      c.useAbility_OH(a.wandStoneHidden, hand)

    :?foe.distance < s.dash_range_min &
    ^c.canUseAbility("mind")
      a.ldtF("mind")
    :?foe.distance < s.dash_range_min &
    ^c.canUseAbility("staff_stone")
      c.useAbility_TH(a.staffStoneHidden)

    :?c.isPermapotSetup &
    ^encounter.eliteMod ! "tenacious" &
    ^foe.debuffs.string ! "stun"
      equipL grappling
    :
      fight("ranged")

// .......... ENGAGE/WALKING LOGIC .......... //

:?ai.paused |
^(ai.idle & foe.distance > s.dash_range_min) | // waiting for animation to complete
^c.isDead() |
^isDysanCutscene |
^foe.distance > s.dash_range_max | // too far to dash
^foe.state = -1 // engaging state
  ?armor > a.compoundMaxArmor_boosted |
  ^(encounter.eliteMod = "metamorph" &
  ^foe.distance < s.shield_rune_range)
    a.ldtF("engage")
  :?a.compoundMaxArmor_default <= armor &
  ^armor <= a.compoundMaxArmor_boosted
    a.ldtF("defense regen max")
  :
    a.ldtF("defense regen fast")

// .............. COMBAT LOGIC .............. //

:?foe = "phase" // Dysangelos fight logic
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Boosted) // reached ignition cap
    c.devour("cinderwisp")

  ?c.canUseAbility("bash")
    a.ldtF("bash")
  :?c.canUseAbility("dash")
    a.ldtF("dash")

  :?foe ! "phase3"
    ?foe.buffs.string = "buff_protection" & // against debuffs
    ^c.canUseAbility("wand_vigor")
      c.useAbility_OH(a.wandVigorHidden, hand)
    :
      fight("melee")

  : // foe = phase3
    ?c.canUsePotion(potionType)
      activate potion
    :?c.canUseAbility("staff_poison") & !c.isDashingRange()
      c.useAbility_TH(a.staffPoisonHidden)
    /*:?c.canUseAbility("wand_ice") & !c.isDashingRange()
      c.useAbility_OH(a.wandIceHidden, hand)
    :?c.canUseAbility("wand_fire") & !c.isDashingRange()
      c.useAbility_OH(a.wandFireHidden, hand)*/
    :?c.canUseAbility("heavy_hammer") & foe.armor > 0 & // reduce armor
    ^!c.isPermapotSetup
      c.useAbility_TH("Guardian's Bane") //'
    :
      fight("melee")

: // 1v1
  ?c.canUseAbility("bash")
    a.ldtF("bash")
  :?c.canUseAbility("dash")
    a.ldtF("dash")
  :?c.canUseAbility("staff_poison")
    c.useAbility_TH(a.staffPoisonHidden)
  /*:?c.canUseAbility("wand_ice")
    c.useAbility_OH(a.wandIceHidden, hand)*/
  :
    fight("melee")


//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ END OF "1-Rocky" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //