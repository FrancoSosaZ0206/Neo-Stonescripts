//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "7-Ridge" ▄▀▄▀▄▀▄▀▄ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //

// ///////////////// IMPORTS ///////////////// //

var u = import My/Lib/Utilities
var c = import My/Lib/Combat
var s = import My/Lib/Stats
var a = import My/Lib/Arsenal

// //////////////// VARIABLES //////////////// //

var blowing =
^(foe.state = 133 | // Hrímnir's blowing state
^ foe.state = 143) // Hrímnir blowing and putting ice wall

var canDash   = true

var stunTime  = null
var hand      = null
var margin    = 8 // big sword left hitbox + splash range

var boss_screen = null
var boss_cutscenes = [] // TO DO

var nRuns = 1 // number of runs in this session
var permapotActTime = -1 // time when permapot was activated, -1 means not activated

var old_t = item.GetTreasureCount()
var enduse = 0

// //////////////// FUNCTIONS //////////////// //

func fight(mode)
  ?mode = "escape"
    canDash = false

    ?c.canUseAbility("mind")
      a.ldtF("mind")
    : // c.canUseAbility("staff_stone")
      c.useAbility_TH("staff_stone", a.stSh)

  :?mode = "evade"
    canDash = false

    ?c.canUseAbility("staff_stone") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      c.useAbility_TH("staff_stone", a.stSh)
    :?c.canUseAbility("mind") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      a.ldtF("mind")

    :?c.canUseAbility("staff_ice") & foe.distance < s.getRange("dash_min")
      c.useAbility_TH("staff_ice", a.stIh)

    :?!s.inRange("sword")
      ?foe.count > 1
        fight("magic")
      :
        fight("magic")

    // Unmake
    :?c.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")
  :
    // 1. debuff, if possible
    ?blowing & a.canSmartDebuff("magic") &
    ^foe.GetCount(foe.distance + margin) = 1
      a.smartDebuff("magic")

    :?c.permapotSetup &
    ^a.canSmartDebuff("magic") & foe = "elite"
      ?foe.GetCount(foe.distance + margin) > 1
        a.smartDebuff("magic")
      :
        a.ldtF("sword debuff auto")
    :?!c.permapotSetup &
    ^a.canSmartDebuff("magic") & foe = "elite" &
    ^foe.GetCount(foe.distance + margin) > 1
      a.smartDebuff("magic")

    :?(c.canApplyAny() | c.canApplyBurn()) &
    ^(foe = "monarch" | foe = "boss") &
    ^mode = "melee"
      a.ldtF("sword debuff auto")

    // 2. Heal if needed
    :?hp ! maxhp &
    ^foe.GetCount(foe.distance + margin) = 1
      a.ldtF("sword heal")

    // 3. Unmake
    :?c.canUnmake()
      ?mode = "melee"
        a.ldtF("sword unmake")
      : // foe.GetCount(foe.distance + margin) > 1
        a.ldtF("big sword unmake")

    : // 4. Deal max damage
      ?mode = "melee" & !blowing
        a.ldtF("sword dmg")
      :
        ?blowing
          canDash = false
        a.ldtF("magic dmg")

// //////////////// PROCEDURE //////////////// //

>`1,12,#magenta,screen.i = @screen.i@\n
^boss_screen = @boss_screen@

// ............. WITHDRAWAL LOGIC ............ //

?s.getTotalHP("player") <= s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl)
  loc.Leave()

// ............... SETUP LOGIC ............... //

?loc.loop
  nRuns++

  old_t = item.GetTreasureCount()
  enduse = 0

// Set up boss_screen
?!boss_screen
  ?loc.stars <= 10 // cyan and white
    boss_screen = 2
  :?loc.stars <= 15 // yellow
    boss_screen = 7
  :?loc.stars = 16
    boss_screen = 3
  :?loc.stars = 17
    boss_screen = 4
  :?loc.stars <= 20 // green
    boss_screen = 7
:?screen.i = boss_screen
  blowing =
  ^(foe.state = 133 | // Hrímnir's blowing state
  ^ foe.state = 143) // Hrímnir blowing and putting ice wall

?nRuns = 1 & loc.stars > 15 & boss_screen
  c.permapotSetup = (screen.i >= boss_screen - 1)

// Record time when permapot was activated
?c.permapotSetup & permapotActTime = -1
  permapotActTime = totaltime

// BFG logic
?nRuns > 1
  c.screenMngr_DS("blade", 1, boss_screen - 3)
  ?c.canUseAbility_DS("blade")
    c.useAbility_DS("blade")
    >c0,0,#red,BFG DS

canDash = true

c.potionType = "berserk" // "lucky"
c.Init()
a.smartDebuff_Mgr()
disable npcDialog

stunTime = s.getEffectStat("foe","debuff","stun","time") // frames
?!stunTime
  stunTime = -1

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

// Auto brewing
?c.canBrewPotion()
  c.brewPotion()
?c.canUsePotion() & c.permapotSetup
  activate potion

// Permapot equipment
?c.permapotSetup
  a.ldtF("permapot")

c.AAC(a.hVeff, a.shFdef)

// Initial equipments
?loc.begin
  a.ldtF("default")

// speed up (picking chest)
:?old_t ! item.GetTreasureCount() &
^!(loc.stars > 15 & nRuns = 1)
  enduse++

  ?c.canUseAbility("staff_fire") & enduse > 5
    c.useAbility_TH("staff_fire", a.stFh)
  :?pickup.distance < 15
    a.ldtF("magnet")
  :
    a.ldtF("defense armor regen")

// speed up (normal)
:?c.canUseAbility("staff_fire") &
^screen.i < boss_screen &
^nRuns > 1 &
^(!s.inRange("dash") | foe.distance = 9999) &
^buffs.string ! "buff_inf_speed" &
// save armor if it's setup run
^!(loc.stars > 15 & nRuns = 1)
  c.useAbility_TH("staff_fire", a.stFh)

// mini-dash
:?c.canUseAbility("quarterstaff") &
^!s.inRange("dash") & ai.walking &
^ai.enabled & !ai.paused &
^!blowing
  c.useAbility_TH("quarterstaff", a.myQ)

// Summons
:?c.canSummon("voidweaver") &
^screen.i < boss_screen - 1 // not a cutscene
  c.useAbility_OH("aether_talisman", "aether_talisman", hand)
:?c.canSummon("cinderwisp") &
^screen.i >= boss_screen - 1
  c.useAbility_OH("fire_talisman", "fire_talisman", hand)

// Pick up things
:?pickup.distance < 15
  a.ldtF("magnet")

// .............. SPECIAL LOGIC .............. //

// **************************************  //
// boss special -- get extra damage while
// idle with bardiche
:?foe = "phase" & foe.state = 1
  ?c.canUseAbility("bardiche") & !c.permapotSetup
    c.useAbility_TH("bardiche", Kubikiribocho)
  :?c.canUseAbility("mask")
    c.useAbility_OH("mask", "mask", "r")
  :
    a.ldtF("defense armor regen")

// **************************************  //


// .............. DEFENSIVE LOGIC ............ //

// about to blow air and apply chill
:?foe = "phase" & foe.state = 132 &
^((foe.debuffs.string = "chill:6" & foe.time > 65) |
^ (foe.debuffs.string ! "chill" & foe.time > 27))
  ?c.canUseAbility("staff_vigor") // try to prevent the debuff
    c.useAbility_TH("staff_vigor", a.stVh)
  :?c.canUseAbility("wand_ice")
    c.useAbility_OH("wand_ice", a.wIh, hand)
  :
    fight("melee")

:?blowing | // blowing air
^foe.name = "Ice Wall"
  canDash = false
  fight("magic")

// ........... ENGAGE/WALKING LOGIC .......... //

:?ai.walking &
^!(s.inRange("crossbow") |
^  a.canSmartDash())
  ?armor > a.compoundMaxArmor_boosted |
  ^c.canEngage()
    a.ldtF("engage")
  :
    a.ldtF("defense armor regen")

:?ai.paused | !ai.enabled
  a.ldtF("defense armor regen")

// ............... COMBAT LOGIC .............. //

// Voidweaver - use it if possible
:?c.canUseAbility("voidweaver") &
^foe.count > 1 & !c.permapotSetup &
^c.canUnmakeVoidweaver()
  ?c.canUseAbility("dash")
    a.ldtF("dash")
  :?!s.inRange("sword")
    c.stutterStepping("sword")
    equipR @a.shC2@
  :
    c.devour("voidweaver")

// Knockback farming
:?c.canKbFarm()
  c.smoothCast(a.bS)

:?a.canSmartDash() & canDash
  a.smartDash()
// if in range, get closer while trying to unmake with repeating bow
:?canDash & foe.distance =
^   math.Clamp(foe.distance,
^              s.getRange("dash_max") + 1,
^              s.getRange("crossbow")) &
^!c.permapotSetup & debuffs.string ! "chill"
  c.smoothCast(a.bR)

// Calamity - reduce hp
:?c.canUseAbility("wand_aether") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ foe.buffs.string = "buff_tenacious")
  c.useAbility_OH("wand_aether", a.wAh, hand)
// Reset buff
:?foe.buffs.string = "stoic" &
^c.canUseAbility("wand_vigor")
  c.useAbility_OH("wand_vigor", a.wVh, hand)
// Reduce damage
:?c.canUseAbility("wand_poison") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ foe.buffs.string = "buff_tenacious")
  c.useAbility_OH("wand_poison", a.wPh, hand)
// Stun enemies
:?c.canApplyStun() & foe = "elite" &
^foe.count > 1 &
^s.getTotalHP("player") < c.midhp &
^c.canUseAbility("wand_ice")
  c.useAbility_OH("wand_ice", a.wIh, hand)

// AOE Strat
:?foe.GetCount(foe.distance + margin) > 1
  // Align foes
  ?c.canUseAbility("wand_stone")
    c.useAbility_OH("wand_stone", a.wSh, hand)

  ?c.canUseAbility("heavy_hammer") & foe = "elite"
    ?encounter.eliteMod = "plated"
      c.useAbility_TH("heavy_hammer", "Guardian's Bane")
    :
      c.useAbility_TH("heavy_hammer", Mjölnir)

  // Perma-stun
  :?s.inRange("grappling_hook") &
  ^(c.canApplyStun() |
  ^(stunTime = math.Clamp(stunTime, 1, 11) & // frames
  ^foe.debuffs.string ! "debuff_armor_fatigue"))
    a.ldtF("grappling")

  :?nRuns = 1
    a.ldtF("big sword unmake")
  // Debuff and unmake
  :?encounter.eliteMod = "blessed" |
  ^foe.buffs.string = "buff_tenacious"
    ?a.canSmartDebuff("magic")
      a.smartDebuff("magic")
    :
      a.ldtF("big sword unmake")
  :
    ?buffs.string = "ʘ" // berserk potion
      a.ldtF("big sword unmake")
    :
      equip Kubikiribocho

// Boss fight (Hrímnir)
:?foe = "phase"
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Boosted) // reached ignition cap
    c.devour("cinderwisp")

  // states 0 and 1 are when he has the ice shield
  ?foe.state > 1
    ?c.canUsePotion()
      activate potion
    :?c.canUseAbility("staff_poison") & !s.inRange("dash")
      c.useAbility_TH("staff_poison", a.stPh)
    :
      fight("melee")
  : // normal melee combat logic
    fight("melee")

: // 1v1
  // Tanky foe, use bardiche ability to lower its hitpoints
  ?loc.stars > 15 &
  ^(foe = "boss" | foe = "monarch") &
  ^foe.GetCount(foe.distance + margin) = 1 &
  ^s.inRange("sword") &
  ^(c.canUseAbility("bardiche") |
  ^c.canUseAbility("staff_poison")) & nRuns > 1
    ?c.canUseAbility("staff_poison")
      c.useAbility_TH("staff_poison", a.stPh)
    : // c.canuseAbility("bardiche")
      c.useAbility_TH("bardiche", Kubikiribocho)
  // Perma-stun
  :?foe = "boss" & s.inRange("grappling_hook") &
  ^(c.canApplyStun() |
  ^(stunTime = math.Clamp(stunTime, 1, 11) & // frames
  ^foe.debuffs.string ! "debuff_armor_fatigue"))
    a.ldtF("grappling")
  :
    fight("melee")

//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄▀ END OF "7-Ridge" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //