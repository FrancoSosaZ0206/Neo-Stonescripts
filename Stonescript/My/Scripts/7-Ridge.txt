//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "7-Ridge" ▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //


// //////////////// IMPORTS ///////////////// //

var u = import My/Lib/Utilities
var c = import My/Lib/Combat
var s = import My/Lib/Stats
var a = import My/Lib/Arsenal


// /////////////// VARIABLES //////////////// //

var blowing

var keepCultistMask = true
var voidweaverScreen = 3
var smiteScreen = 1

var stunTime  = null
var margin    = 8 // big sword left hitbox + splash range
var hand      = null
var canDash   = true

var boss_screen = null
var boss_cutscenes = [] // TO DO


// /////////////// FUNCTIONS //////////////// //

func fight(mode)
  ?mode = "evade"
    canDash = false

    ?c.canUseAbility("staff_stone") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      c.useAbility_TH("staff_stone", a.stSh)
    :?c.canUseAbility("mind") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      a.ldtF("mind")

    :?c.canUseAbility("staff_ice") & foe.distance < s.getRange("dash_min")
      c.useAbility_TH("staff_ice", a.stIh)

    :?!s.inRange("sword")
      ?foe.count > 1
        fight("magic")
      :
        fight("ranged")

    // Unmake
    :?c.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")
  :
    // 1. debuff, if possible
    ?(foe = "monarch" | foe = "boss") &
    ^mode = "melee" &
    ^(c.canApplyAny() | c.canApplyBurn())
      a.ldtF("sword debuff")

    // 2. Heal if needed
    :?hp ! maxhp &
    ^foe.GetCount(foe.distance + margin) = 1
      a.ldtF("sword heal")

    // 3. Unmake
    :?c.canUnmake()
      ?mode = "melee"
        a.ldtF("sword unmake")

      :?(c.permapotSetup &
      ^foe.GetCount(foe.distance + margin) > 1) |
      ^foe.GetCount(foe.distance + margin) = 1
        // Big sword splash area
        ?a.canSmartDash() // get closer
          a.smartDash()
        : // attack
          ?c.permapotSetup &
          ^foe.GetCount(foe.distance + margin) > 1
            a.ldtF("big sword unmake")
          : // foe.GetCount(foe.distance + margin) = 1
            a.ldtF("sword unmake")
      :
        a.ldtF("ranged unmake")

    : // 4. Deal max damage
      ?mode = "melee"
        a.ldtF("sword dmg")

      :?!c.permapotSetup
        a.ldtF("magic dmg")
      :
        a.ldtF("ranged dmg")


// /////////////// PROCEDURE //////////////// //

>`1,10,#magenta,pickup=@pickup@\n
^scr i=@screen.i@

// ............ WITHDRAWAL LOGIC ............ //

?(c.permapotSetup &
^foe.buffs.string = "buff_tenacious") |
^s.getTotalHP("player") <= s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl)
  loc.Leave()

// .............. SETUP LOGIC ............... //

c.potionType = "lucky"
c.Init()
a.smartDebuff()
disable npcDialog

stunTime = s.getEffectStat("foe","debuff","stun","time") // frames
?!stunTime
  stunTime = -1

// Set up boss_screen
?!boss_screen
  ?loc.stars <= 10 // cyan and white
    boss_screen = 2
  :?loc.stars <= 15 // yellow
    boss_screen = 6
  :?loc.stars <= 20 // green
    boss_screen = 7

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

c.screenMngr_DS("blade", 1, boss_screen - 3)
c.AAC(a.hVeff, a.sFeff)

// Auto brewing
?c.canBrewPotion()
  c.brewPotion()

// Initial equipments
?loc.begin
  a.ldtF("default")
:?c.permapotSetup
  a.ldtF("permapot")

?c.canUsePotion() & c.permapotSetup
  activate potion
:?c.canUseAbility_DS("blade") & loc.stars > 15
  c.useAbility_DS("blade")

// ***************************************** //

var old_t = item.GetTreasureCount()
var enduse = 0
?loc.loop 
  old_t = item.GetTreasureCount()
  enduse = 0

?old_t ! item.GetTreasureCount()
  enduse++

// speed up
:?item.GetCooldown("staff_fire") <= 0 &
^armor > 6 &
^((old_t ! item.GetTreasureCount() &
^enduse < 30) | pickup = "treasure")
  >c0,4,#yellow,INFERNAL STAFF CHEST
  c.useAbility_TH("staff_fire", a.stFh)
// ***************************************** //

:?c.canUseAbility("staff_fire") &
^screen.i < boss_screen &
// ^(!s.inRange("dash") | foe.distance = 9999) &
^buffs.string ! "buff_inf_speed" &
// save armor if it's setup run
^!c.permapotSetup
  c.useAbility_TH("staff_fire", a.stFh)

// mini-dash
:?c.canUseAbility("quarterstaff") &
^!s.inRange("dash") & ai.walking &
^ai.enabled & !ai.paused &
^foe.state ! 133 // Hrímnir's blowing state
  c.useAbility_TH("quarterstaff", a.myQ)

// Summons
:?c.canSummon("voidweaver") &
^loc.stars > 15 &
^screen.i < boss_screen - 1 // not a cutscene
  c.useAbility_OH("aether_talisman", "aether_talisman", hand)
:?c.canSummon("cinderwisp") &
^(loc.stars <= 15 | screen.i >= boss_screen - 1)
  c.useAbility_OH("fire_talisman", "fire_talisman", hand)

// Pick up things
:?pickup.distance < 15
  a.ldtF("magnet")

// ............. DEFENSIVE LOGIC ............ //

:?foe = "phase" &
^foe.state = 132 & foe.time > 65
  // about to blow air and apply chill
  ?c.canUseAbility("staff_vigor") // try to prevent the debuff
    c.useAbility_TH("staff_vigor", a.stVh)
  :?c.canUseAbility("wand_ice")
    c.useAbility_OH("wand_ice", a.wIh, hand)
  :
    fight("melee")

:?foe = "phase" &
^foe.state = 133 // blowing air
  canDash = false
  fight("ranged")

// ............ AOE/RANGED LOGIC ............ //

:?c.canUseAbility("voidweaver") &
^foe.count > 1 & !c.permapotSetup &
^c.canUnmakeVoidweaver()
  ?c.canUseAbility("dash")
    a.ldtF("dash")
  :?c.canUseAbility("bash")
    a.ldtF("bash")
  :?!s.inRange("sword")
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    equipR @a.shC2@
  :
    c.devour("voidweaver")

// Calamity - reduce hp
:?c.canUseAbility("wand_aether") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_aether", a.wAh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@
// reset buffs
:?foe.buffs.string = "stoic" &
^c.canUseAbility("wand_vigor")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_vigor", a.wVh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@
// hinder regen
:?encounter.eliteMod = "regen" &
^c.canUseAbility("wand_fire")
  ?a.canSmartDash()
    a.smartDash()
  :?foe.distance < s.getRange("dash_min")
    c.useAbility_OH("wand_fire", a.wFh, hand)
  : // get closer
    ?totaltime % 2 = 0 & !s.inRange("triskelion")
      equipL triskelion
    :
      equipL sword
    ?!c.permapotSetup
      equipR @a.shC2@

// Knockback farming
:?foe ! "unpushable" &
^c.canSmoothCast() &
^s.inRange("crossbow")
  ?a.canSmartDash()
    a.smartDash()
  : // c.canSmoothCast()
    >c0,0,#red,KNOCKBACK FARMING
    c.smoothCast(a.bS)

:?loc.stars > 15 & (
^(c.permapotSetup &
^foe.GetCount(foe.distance + margin) > 1 &
^s.inRange("wand")) |
^(!c.permapotSetup &
^foe.GetCount(foe.distance + s.getRange("crossbow")) > 1 &
^s.inRange("crossbow")))
  ?c.canUseAbility("wand_stone")
    c.useAbility_OH("wand_stone", a.wSh, hand)

  :?foe ! "elite"
    >`1,10,#red,foe ! elite
    ?a.canSmartDash()
      a.smartDash()
    :?c.permapotSetup
      ?c.canApplyStun() |
      ^stunTime = math.Clamp(stunTime, 1, 11) // frames
        a.ldtF("grappling")
      :
        >`1,10,#red,foe ! elite
        a.ldtF("big sword unmake")
    :?a.canSmartDash()
      a.smartDash()
    :?!s.inRange("triskelion")
      equipL triskelion
    :?foe.GetCount(foe.distance + s.getRange("crossbow")) > 1
      a.ldtF("ranged unmake")
    :?!s.inRange("sword") & totaltime % 2 = 0
      equipL triskelion
      equipR hatchet
    :
      a.ldtF("sword unmake")
  : // foe = "elite"
    ?c.canUseAbility("heavy_hammer")
      ?a.canSmartDash()
        a.smartDash()
      :?!s.inRange("triskelion")
        equipL triskelion
      :
        c.useAbility_TH("heavy_hammer", "Guardian's Bane")

    :?foe.GetCount(foe.distance + s.getRange("crossbow")) > 1
      ?foe.distance < s.getRange("dash_min") &
      ^c.canUseAbility("staff_stone")
        c.useAbility_TH("staff_stone", a.stSh)
      :?foe.distance < s.getRange("dash_min") &
      ^c.canUseAbility("mind")
        a.ldtF("mind")

      :?c.canApplyStun() |
      ^stunTime = math.Clamp(stunTime, 1, 11)
        a.ldtF("grappling")
      :
        fight("ranged")
    :?c.canSmartDash()
      c.smartDash()
    :?!s.inRange("triskelion") |
    ^(!s.inRange("sword") & totaltime % 2 = 0)
      equipL triskelion
      equipR hatchet
    :
      fight("melee")

// .......... ENGAGE/WALKING LOGIC .......... //

:?ai.paused | !ai.enabled |
^(ai.idle & foe.distance > s.getRange("dash_min")) | // waiting for animation to complete
^c.isDead() |
^ (boss_cutscenes.Contains(foe.state) & // is a cutscene
^ foe.damage > 1) | // dysan state 107 fight (flying)
^foe.distance > s.getRange("dash_max") | // too far to dash
^foe.state = -1 | // sleep state
^(foe.state = 2 & // engaging state
^ foe.distance > s.getRange("dash_max"))
  ?armor > a.compoundMaxArmor_boosted |
  ^c.canEngage()
    a.ldtF("engage")

  :?a.compoundMaxArmor_default <= armor &
  ^armor <= a.compoundMaxArmor_boosted
    a.ldtF("defense regen max")
  :
    a.ldtF("defense regen fast")

// .............. COMBAT LOGIC .............. //

:?a.canSmartDash() & canDash
  a.smartDash()

// Boss fight (Hrímnir)
:?foe = "phase"
  canDash = true
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Boosted) // reached ignition cap
    c.devour("cinderwisp")
  
  ?foe.state > 1 // states 0 and 1 are when he has the ice shield
    ?c.canUsePotion()
      activate potion
    :?c.canUseAbility("staff_poison") & !s.inRange("dash")
      c.useAbility_TH("staff_poison", a.stPh)
    // stun and finish him off
    :?loc.stars <= 15 &
    ^c.canUseAbility("wand_ice")
      c.useAbility_OH("wand_ice", a.wIh, hand)
  : // normal melee combat logic
    fight("melee")

: // 1v1
  ?c.canUseAbility("staff_poison") &
  ^!c.permapotSetup & s.getTotalHP("foe") > 1000
    c.useAbility_TH("staff_poison", a.stPh)
  // finish off with bardiche ability
  :?c.canUseAbility("bardiche") &
  ^s.getTotalHP("foe") <= s.bardicheDmgR(a.bardicheDmg_Default,
  ^                                      a.bardicheMult_Boosted)
    c.useAbility_TH("bardiche", Kubikiribocho)
  :
    fight("melee")


//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ END OF "7-Ridge" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //
