//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ START OF "6-Mine" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //

// ///////////////// IMPORTS ///////////////// //

var u = import My/Lib/Utilities
var c = import My/Lib/Combat
var s = import My/Lib/Stats
var a = import My/Lib/Arsenal

// //////////////// VARIABLES //////////////// //

// flags
var canDash  = true

// values
var stunTime = null
var hand     = null

var itemSplash = 17 // bardiche hitbox + splash area

var boss_screen = null
var boss_cutscenes = [] // TO DO

var bombCartDmg = [
^60, 65, 70, 75, 80, // yellow
^85, 90, 95, 100, 105] // green

// counters
var nRuns = 1 // number of runs in this session
var permapotActTime = -1 // time when permapot was activated, -1 means not activated
var permapotTbw = loc.averageTime - (loc.averageTime / 10) // permapot time bandwidth

var old_t = item.GetTreasureCount()
var end_t = 0

// //////////////// FUNCTIONS //////////////// //

func fight(mode)
  ?mode = "escape"
    canDash = false

    ?c.canUseAbility("mind")
      a.ldtF("mind")
    : // c.canUseAbility("staff_stone")
      c.useAbility_TH("staff_stone", a.stSh)

  :?mode = "evade"
    canDash = false

    ?c.canUseAbility("staff_stone") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      c.useAbility_TH("staff_stone", a.stSh)
    :?c.canUseAbility("mind") &
    ^(foe ! "ranged" |
    ^(foe = "phase" & foe.distance < s.getRange("dash_min")))
      a.ldtF("mind")

    :?c.canUseAbility("staff_ice") & foe.distance < s.getRange("dash_min")
      c.useAbility_TH("staff_ice", a.stIh)

    :?foe.distance > s.getRange("sword") + 1
      ?foe.count > 1
        fight("normal")
      :
        fight("normal")

    // Unmake
    :?c.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")
  :?mode = "normal"
    // ........... DEBUFFING LOGIC .......... //
    var canWeakenRanged = c.canApplyWeaken()
    var canBurnRanged = c.canApplyBurn()

    // Bronze Guardian ranged debuffing
    ?foe = "phase" & !canDash & canWeakenRanged
      a.ldtF("magic debuff weaken")
      ?(item.left = a.wPeff & item.left.state = 3) |
      ^(item.right = a.wPeff & item.right.state = 3)
        canWeakenRanged = false

      >h0,7,#red,weakening phase
    :?foe = "phase" & !canDash & canBurnRanged
      a.ldtF("magic debuff burn")
      ?(item.left = a.wFeff & item.left.state = 3) |
      ^(item.right = a.wFeff & item.right.state = 3)
        canBurnRanged = false
      
      >h0,7,#red,burning phase

    // AOE debuffing
    :?a.canSmartDebuff("magic") &
    ^(!canDash |
    ^(foe = "elite" &
    ^ foe.GetCount(itemSplash) > 1))
      a.smartDebuff("magic")

    // Permapot 1v1 debuffing
    :?c.canApplyAny() & canDash &
    ^c.permapotSetup & foe = "elite" &
    ^foe.GetCount(itemSplash) = 1
      a.ldtF("sword debuff auto")

    // 1v1 strong foe weakening
    :?c.canApplyWeaken() & canDash &
    ^(foe = "monarch" | foe = "phase")
      a.ldtF("sword debuff weaken")

    // 1v1 strong foe debuffing
    :?(c.canApplyChill(6) | c.canApplyBurn()) &
    ^canDash &
    ^((loc.stars > 15 &
    ^(foe = "monarch" | foe = "phase") &
    ^s.getFoeDmg(a.berserkerLvl, a.plagueLvl, a.maskLvl) > 0) |
    ^nRuns = 1)
      a.ldtF("sword debuff auto")

    // ............ HEALING LOGIC ........... //
    :?hp ! maxhp &
    ^((canDash &
    ^  foe.GetCount(itemSplash) = 1) |
    ^ foe = "monarch")
      a.ldtF("sword heal")

    // ........... UNMAKING LOGIC ........... //
    :?c.canUnmake()
      ?canDash &
      ^foe.GetCount(itemSplash) = 1
        a.ldtF("sword unmake")
      : // foe.GetCount(itemSplash) > 1
        a.ldtF("big sword unmake")

    // ........... DAMAGE LOGIC ........... //
    :?canDash &
    ^(foe.GetCount(itemSplash) = 1 |
    ^foe = "monarch" | foe = "phase")
      ?c.canUseAbility("staff_poison") &
      ^!s.inRange("dash")
        c.useAbility_TH("staff_poison", a.stPh)
      :?c.canUsePotion() & foe = "phase"
        activate potion
      :
        a.ldtF("sword dmg")

      >h0,7,#red,dmg melee
    : // !(canDash | (...))
      ?!c.permapotSetup
        a.ldtF("ranged dmg")
      :
        a.ldtF("magic dmg")
      >h0,7,#red,dmg ranged
  : // invalid mode
    u.showStrCtr(0,30,#red,"ERROR\nFILE: 1-Rocky\nFUNCTION: fight\nCAUSE: unknown <mode>:\n\n" + mode, false)

// //////////////// PROCEDURE //////////////// //

// ............. MONITOR LOGIC .............. //

?permapotActTime ! -1 & nRuns = 1
  var delay = totaltime + (5 * 30)
  ?totaltime <= delay
    >o-7,6,#magenta,wait until @time.FormatDigital(permapotTbw)@

>`1,7,#magenta,screen = @screen.i@\n
^boss_screen = @boss_screen@

?foe.distance ! 9999
  >f0,10,#magenta,dist=@foe.distance@

// ............. WITHDRAWAL LOGIC ............ //

?(foe ! "boss" & s.getTotalHP("player")
^ <=
^s.getFoeDmg(a.berserkerLvl,
^            a.plagueLvl,
^            a.maskLvl      )) |
^nRuns >= 25
  loc.Leave()

// ............... SETUP LOGIC ............... //

?loc.loop
  nRuns++

  old_t = item.GetTreasureCount()
  end_t = 0

// Set up boss_screen
?!boss_screen
  ?loc.stars <= 5 // white
    boss_screen = 7
  :?loc.stars <= 15 // cyan and yellow
    boss_screen = 8
  :?loc.stars <= 20 // green
    boss_screen = 4 + (loc.stars - 16)

?nRuns = 1 & loc.stars > 15 & boss_screen
  c.permapotSetup = c.permapotSetup & (screen.i >= boss_screen - 1)

// Record time when permapot was activated
?c.permapotSetup & permapotActTime = -1
  permapotActTime = totaltime

// BFG logic
?nRuns > 1
  c.screenMngr_DS("blade", 1, boss_screen - 3)

// set up itemSplash default value
itemSplash = 17 // bardiche's hitbox + itemSplash area
// Set canDash default value
canDash = true

c.potionType = "lucky"
c.Init()
a.smartDebuff_Mgr()

stunTime = s.getEffectStat("foe","debuff","stun","time") // frames
?!stunTime
  stunTime = -1

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

// Auto brewing
?c.canBrewPotion()
  c.brewPotion()

// track time after picking treasure up
?old_t ! item.GetTreasureCount()
  end_t++

// ................................... //

// Permapot equipment
?c.permapotSetup
  a.ldtF("permapot")

c.AAC("sword *0", "hatchet")

// Initial equipments
?loc.begin
  a.ldtF("default")

/* activate potion after picking up treasure
or while setting up permapot. */
:?c.canUsePotion() & loc.stars > 10 &
^(c.permapotSetup |
^ (end_t > 1 &
^  loc.id = "bronze_guardian_harder" &
^  !c.canUseAbility("staff_fire")))
  activate potion

// Summons
:?c.canSummon("voidweaver") &
^ loc.id = "bronze_mine"
  c.useAbility_OH("aether_talisman", "aether_talisman", hand)
:?c.canSummon("cinderwisp") &
^ loc.id = "bronze_guardian_harder"
  c.useAbility_OH("fire_talisman", "fire_talisman", hand)

// .............. DEFENSIVE LOGIC ............ //

// minecart miniboss "bomb cart"
// dash back if we don't have enough armor to tank the damage
:?foe = "explode" & armor < bombCartDmg[loc.stars - 11]
  ?c.canUseAbility("dash")
    a.ldtF("dash")
    >h0,6,#red,dashing
  :?c.canUseAbility("bash")
    a.ldtF("bash")
    >h0,6,#red,bashing
  :?s.inRange("dash_min")
    fight("escape")
    >h0,6,#red,escaping
  :?c.canStutterStep() // stutter step to it
    c.stutterStep()
    >h0,6,#red,stutterstepping to it
  : // walk to it
    ?!s.inRange("triskelion")
      a.ldtF("default")
    :
      equipL sword
    >h0,6,#red,walking to it

// boss's hammer attack
:?foe = "phase" & foe.state = 32 & foe.time >= 30
  canDash = false
  fight("escape")

// ............ CUTSCENES LOGIC ............. //



// ........... ENGAGE/WALKING LOGIC .......... //

// speed up (post-treasure)
:?c.canUseAbility("staff_fire") &
^ end_t > 1 &
^ loc.id = "bronze_guardian_harder" &
^ loc.stars > 10
  c.useAbility_TH("staff_fire", a.stFh)

// speed up (normal)
:?c.canUseAbility("staff_fire") &
^screen.i < boss_screen &
// already has the speed effect
^buffs.string ! "buff_inf_speed" &
// 1 foe just defeated
^((foe.count = 1 & foe.state = 4) |
// too far to attack
^ (!s.inRange("crossbow"))) &
// save armor if it's setup run
^!(loc.stars > 15 &
^  (nRuns = 1 |
// Don't use it when facing the scout
^   (nRuns > 1 & screen.i = 1)))
  c.useAbility_TH("staff_fire", a.stFh)

// mini-dash
:?c.canUseAbility("quarterstaff") &
^!s.inRange("dash") & ai.walking &
^ai.enabled & !ai.paused & !blowing
  c.useAbility_TH("quarterstaff", a.myQ)

// Pickup logic
:?pickup.distance < 15 &
// foe is farther than pickup
^(foe.distance > 15 |
^ foe.distance = 9999 |
// pickup is a treasure
^ pickup = "treasure")
  a.ldtF("magnet")

// regen armor (after picking chest up)
:?(loc.stars <= 10 & old_t ! item.GetTreasureCount()) |
^(end_t > 1 & loc.id = "bronze_guardian_harder" &
^!(c.canUsePotion() | c.canUseAbility("staff_fire")))
  a.ldtF("defense armor regen")

// engaging logic
:?ai.walking & player.direction = 1 &
^!s.inRange("crossbow")
  ?armor > a.compoundMaxArmor_boosted |
  ^c.canEngage() & foe ! "phase"
    a.ldtF("engage")
  :
    a.ldtF("defense armor regen")

// armor regen logic
:?ai.paused | !ai.enabled | player.direction = -1
  a.ldtF("defense armor regen")

// .............. RANGED LOGIC .............. //



// .............. DASHING LOGIC ............. //

// Insta-kill Enfused elites
:?c.canUseAbility("wand_fire") & s.inRange("wand") &
^encounter.eliteMod = "enfused"
  c.useAbility_OH("wand_fire", a.wFh, hand)

// Calamity - reduce hp
:?c.canUseAbility("wand_aether") & s.inRange("wand") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ foe.buffs.string = "buff_tenacious")
  c.useAbility_OH("wand_aether", a.wAh, hand)

// Reset buff
:?c.canUseAbility("wand_vigor") & s.inRange("wand") &
^foe.buffs.string = "stoic"
  c.useAbility_OH("wand_vigor", a.wVh, hand)

// Reduce damage
:?c.canUseAbility("wand_poison") & s.inRange("wand") &
^(encounter.eliteMod = "berserk" |
^ foe = "monarch" | encounter.eliteMod = "monarch" |
^ encounter.eliteMod = "blessed" |
^ encounter.eliteMod = "hydra" |
^ foe.buffs.string = "buff_tenacious") &
^s.inRange("dash_min")
  c.useAbility_OH("wand_poison", a.wPh, hand)

// Stun enemies
:?c.canUseAbility("wand_ice") & s.inRange("wand") &
^c.canApplyStun() & foe = "elite" &
^foe.count > 1 &
^s.getTotalHP("player") < c.hihp
  c.useAbility_OH("wand_ice", a.wIh, hand)

:?a.canSmartDash() & canDash
  a.smartDash()
  >h0,6,#red,DASHING

// Knockback farming
:?c.canKbFarm()
  c.smoothCast(a.bS)

/* if in range, get closer while trying to
unmake with repeating crossbow. */
:?canDash & s.betweenRange("triskelion","crossbow") &
^c.canSmoothCast(true) & foe ! "phase"
  c.smoothCast(a.bR)

// get in melee range faster
:?c.canStutterStep()
  c.stutterStep()

// ........... SPECIAL ITEMS LOGIC .......... //

// Voidweaver - use it if possible
:?c.canUseAbility("voidweaver") &
^c.canUnmakeVoidweaver() &
^foe.count > 1 & screen.i > 1 &
^s.inRange("dash_min")
  c.devour("voidweaver")

// ............... AOE LOGIC ................ //

:?foe.GetCount(itemSplash) > 1 &
^!(foe = "boss" | foe = "monarch")
  // Insta-kill Enfused elites
  ?encounter.eliteMod = "enfused" & s.inRange("wand")
    canDash = false

    ?[foe.debuffs.string,
    ^ foe.buffs.string].Contains("enfused")
      >c0,0,#red,ENFUSED IS A STATUS EFFECT!

    ?c.permapotSetup
      equipL @a.wFeff@
    :
      equipL moon
      equipR @a.wFeff@

  // Align foes
  :?c.canUseAbility("wand_stone") & s.inRange("wand")
    c.useAbility_OH("wand_stone", a.wSh, hand)

  // Heavy hammer logic
  :?c.canUseAbility("heavy_hammer") & encounter.eliteMod = "plated"
    c.useAbility_TH("heavy_hammer", "Guardian's Bane")
  :?c.canUseAbility("heavy_hammer") & foe = "mechanical"
    c.useAbility_TH("heavy_hammer", Mjölnir)

  // Stun/Perma-stun logic
  :?s.inRange("grappling_hook") &
  // don't interrupt bardiche
  ^!c.isCasting("bardiche") &
  ^(c.canApplyStun() |
    // stun time (frames) running out
  ^ (stunTime = math.Clamp(stunTime, 1, 11) &
     // not stunned with heavy hammer or Frost Wand
  ^  foe.debuffs.string ! "debuff_armor_fatigue" &
  ^  foe.debuffs.string ! "debuff_frost_stun"))
    a.ldtF("grappling")

  // permapot run
  :?nRuns = 1 |
  ^ (encounter.eliteMod = "blessed" &
  ^  !c.isCasting("bardiche"))
    // Debuff and unmake
    ?a.canSmartDebuff("magic")
      itemSplash = foe.distance + 7
      a.smartDebuff("magic")
    :
      itemSplash = 10
      a.ldtF("big sword unmake")

  // berserk potion
  :?buffs.string = "ʘ" |
  // split hydras lose the Stable buff
  ^(encounter.eliteMod = "hydra" &
  ^ foe.buffs.string ! "stability") /* |
  // more foes outside range
  ^(foe ! "elite" & screen.i > 1 &
  ^ (foe.count -
  ^ foe.GetCount(itemSplash))
  ^ > 0) */
    itemSplash = 10
    a.ldtF("big sword unmake")
  :
    equip Kubikiribocho

// ............... BOSS LOGIC ............... //

// Boss fight (Bronze Guardian)
:?foe = "phase"
  ?c.canKillCinderwisp(a.cinderwispDmg_Default, 0) |
  ^c.isCinderwispCap(a.maxIgnitions_Boosted) // reached ignition cap
    c.devour("cinderwisp")

  ?c.canUsePotion()
    activate potion
  :?c.canUseAbility("heavy_hammer")
    c.useAbility_TH("heavy_hammer", "Guardian's Bane")
  :?c.canUseAbility("mask")
    c.useAbility_OH("mask", "mask", "r")

  // boss's hammer's stuck
  :?foe.state = 33 & foe.time < 180
    ?c.canUseAbility("bardiche")
      c.useAbility_TH("bardiche", Kubikiribocho)
    :
      fight("normal")
  :
    canDash = false
    fight("normal")
    >h0,6,#red,ranged fight

//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄▀ END OF "6-Mine" ▄▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //
