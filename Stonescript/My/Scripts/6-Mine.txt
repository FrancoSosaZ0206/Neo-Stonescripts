// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ //
// ┃ ▄▀▄▀▄▀▄▀▄▀ START OF "6-Mine" ▄▀▄▀▄▀▄▀▄ ┃ //
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ //

// //////////////// IMPORTS ///////////////// //

var log = import My/Lib/Error_Logging/public

var c = import My/Lib/Combat
var s = import My/Lib/Stats
var a = import My/Lib/Arsenal

var es = import My/Lib/Effect_Stats/public
var tracker = import My/Lib/Ranged_Debuffing/public

import UI/FoeStateTracker
// import UI/PlayerStateTracker

// /////////////// VARIABLES //////////////// //

// file
var _FILE = "Scripts/6-Mine"

// flags
var canDash  = true
var hardElite = false
var canUseVwv = false

// values
var stunTime = null
var hand     = null

var itemSplash = s.getRange("crossbow")
var boss_locs = ["bronze_guardian",
^                "bronze_guardian_harder"]

// screens
var minibossScr = null
var isMinibossScr = (loc.stars > 10)
var lastFoeScr = null
var isLastFoeScr = (loc.id = "bronze_mine")
var bossScr = 1
var isBossScr = (boss_locs.Contains(loc.id))

var bfgInitScr = 1

// TODO: implement
var boss_cutscenes = []

// stats
var minibossDmg = [
^60, 65, 70, 75, 80, // yellow
^85, 90, 95, 100, 105] // green

// counters
// number of runs in this session
var nRuns = 1
/* time when permapot was activated,
   -1 means not activated. */
var permapotActTime = -1
// permapot time bandwidth
var permapotTbw = loc.averageTime -
^                 (loc.averageTime / 10)

var old_t = item.GetTreasureCount()
var end_t = 0

// guardian's powerup counter
var powerupCount = 0

// //////////////// FUNCTIONS //////////////// //

func fight(mode)
  ?mode = "escape"
    canDash = false

    ?c.canUseAbility("mind")
      a.ldtF("mind")
    : // c.canUseAbility("staff_stone")
      c.useAbility_TH("staff_stone", a.stSh)

  :?mode = "evade"
    canDash = false

    ?c.canUseAbility("staff_stone") &
    ^ (foe ! "ranged" |
    ^  (foe = "phase" & s.inRange("big_sword")))
      c.useAbility_TH("staff_stone", a.stSh)
    :?c.canUseAbility("mind") &
    ^ (foe ! "ranged" |
    ^  (foe = "phase" & s.inRange("big_sword")))
      a.ldtF("mind")

    :?!s.inRange("sword")
      fight("normal")

    // Unmake
    :?es.canUnmake()
      a.ldtF("defense unmake")
    :
      a.ldtF("defense")

  :?mode = "normal"
    // ........... DEBUFFING LOGIC ........... //

    // Bronze Guardian ranged debuffing
    ?isBossScr & !(canDash |
    ^c.isCasting("heavy_hammer")) & (
    ^tracker.canTrack("Burn") | (
    ^tracker.canTrack("Weaken") &
    ^buffs.string = "smite"))
      >c0,-1,#cyan,GUARDIAN RANGED DEBUFF

      ?tracker.canTrack("Burn")
        a.ldtF("magic debuff burn")
      : // tracker.canTrack("Weaken")
        a.ldtF("magic debuff weaken")

    // AOE debuffing
    :?!isBossScr & (
    ^ tracker.canTrack("Weaken") |
    ^ tracker.canTrack("Burn")    ) &
    ^!c.isCasting("heavy_hammer") & (
    ^!canDash | (foe = "elite" &
    ^ foe.GetCount(itemSplash) > 1) |
    ^ buffs.string = "smite")
      ?tracker.canTrack("Weaken")
        a.ldtF("magic debuff weaken")
      : // tracker.canTrack("Burn")
        a.ldtF("magic debuff burn")

    // 1v1 strong foe weakening
    :?es.canDebuff("Weaken") & canDash & (
    ^ foe = "monarch" | foe = "phase") &
    ^ s.inRange("sword")
      a.ldtF("sword debuff weaken")

    // 1v1 debuffing (permapot/strong foes)
    :?es.canMultiDebuff(["Weaken","Chill",
    ^                    "Burn"           ],
    ^                   "any") &
    ^ canDash & s.inRange("sword") & (
    ^ buffs.string = "smite" | (
    ^ foe.GetCount(itemSplash) = 1) | (((
    ^ loc.stars > 15 & (
    ^ foe = "monarch" | foe = "phase") &
    ^ s.getFoeDmg() > a.thickArmorRed) |
    ^ nRuns = 1)))
      a.ldtF("sword debuff auto")

    // ............ HEALING LOGIC ............ //
    :?hp ! maxhp & ((canDash &
    ^ foe.GetCount(itemSplash) = 1) |
    ^ foe = "monarch") & !(
    ^ foe = "phase" & c.permapotSetup)
      a.ldtF("sword heal")

    // ........... UNMAKING LOGIC ............ //
    :?es.canUnmake()
      ?canDash &
      ^foe.GetCount(itemSplash) = 1
        a.ldtF("sword unmake")
      : // foe.GetCount(itemSplash) > 1
        a.ldtF("big sword unmake")

    // ............ DAMAGE LOGIC ............. //
    
    :?isBossScr
      ?!canDash
        ?nRuns > 1 &
        ^buffs.string = ":"+c.potionType &
        ^buffs.GetTime(c.potionType) > 60
          equip @a.bAdmg@
        :
          a.ldtF("ranged dmg")
      :
        ?nRuns = 1 &
        ^buffs.string = ":"+c.potionType &
        ^buffs.GetTime(c.potionType) > 60
          c.moonjuggle(Void Slayer, a.sAdmg)

        :
          a.ldtF("sword dmg")


    :?canDash & (
    ^ foe.GetCount(itemSplash) = 1 |
    ^ foe = "monarch" | foe = "boss")
      a.ldtF("sword dmg")

  : // invalid mode
    log.logError(_FILE,"fight",
    ^   "unknown <mode>: "+mode)

// //////////////// PROCEDURE //////////////// //

// ............... SETUP LOGIC ............... //

?loc.loop
  nRuns++

// set up post-treasure metrics
?old_t ! item.GetTreasureCount()
  // reset metrics
  ?loc.loop | !isBossScr
    old_t = item.GetTreasureCount()
    end_t = 0
  : // track time
    end_t++

// set up isBossScr
isBossScr = (boss_locs.Contains(loc.id) &
^            screen.i = bossScr)

// set up lastFoeScr
?!lastFoeScr
  ?loc.stars <= 5 // white
    lastFoeScr = 5
  :?loc.stars <= 10 // cyan
    lastFoeScr = 6
  :?loc.stars <= 15 // yellow
    lastFoeScr = 4
  :?loc.stars <= 20
    lastFoeScr = 1 + loc.stars - 16 // green
: // set up isLastFoeScr
  isLastFoeScr = (loc.id = "bronze_mine" &
  ^               screen.i = lastFoeScr)

// set up minibossScr
?!minibossScr & loc.stars > 10
  // yellow
  ?loc.stars <= 15
    minibossScr = 6
  // green
  :?loc.stars <= 20
    minibossScr = 1
:?minibossScr // set up isMinibossScr
  isMinibossScr = (loc.id = "bronze_mine" &
  ^                screen.i = minibossScr)

/* set up permapotSetup:
- from yellow onwards,
- in first run, or
- in green, when in boss screen. */
c.permapotSetup = (
^ nRuns = 1 & loc.stars > 10 & (
^ loc.stars <= 15 | (
^ loc.id = "bronze_mine" &
^ screen.i > lastFoeScr) |
^ boss_locs.Contains(loc.id)))

// Record time when permapot was activated
?c.permapotSetup & permapotActTime = -1
  permapotActTime = totaltime

// BFG logic
?loc.id = "bronze_mine" & (
^loc.stars <= 10 | nRuns > 1)
  c.screenMngr_DS("blade",
  ^               bfgInitScr,
  ^               lastFoeScr - 1)

// set up itemSplash default value
itemSplash = s.getRange("crossbow")

// set up canDash
/* ?isMinibossScr & foe ! "explode"
  canDash = false
: */
canDash = true

// set variables for getFoeDmg
s._berserkerLvl = a.berserkerLvl
s._plagueLvl    = a.plagueLvl
s._maskLvl      = a.maskLvl

// init Combat
c.Init()
// start up Ranged_Debuffing tracker
tracker.track()

// set up stunTime
stunTime = foe.debuffs.GetTime("stun")

// Decide hand for one-handed items
?c.permapotSetup | s.inRange("dash")
  hand = "left"
:
  hand = "right"

// Auto brewing
?loc.stars <= 10
  c.potionType = "strength"
:?loc.stars <= 15
  c.potionType = "berserk"
:
  c.potionType = "lucky"
?c.canBrewPotion()
  c.brewPotion()

// track post-treasure time
?old_t ! item.GetTreasureCount()
  end_t++

// set up hardElite (for AOE logic)
hardElite = (
^["berserk","monarch","blessed"].
^   Contains(encounter.eliteMod)  |
^ foe = "monarch"                 |
^ foe.buffs.string = "buff_tenacious")

// reset powerupCount
?loc.loop & powerupCount > 0
  powerupCount = 0
// increase powerupCount
:?foe = "phase" & foe.state = 32 & foe.time = 0
  powerupCount ++

// set up canUseVwv
// canUseVwv = false

// .............. MONITOR LOGIC .............. //

/* // permapot time bandwidth monitor:
?permapotActTime ! -1 & nRuns = 1
  var delay = totaltime + (5 * 30)
  ?totaltime <= delay
    >o-7,6,#magenta,wait until 
    ^@time.FormatDigital(permapotTbw)@ */

/* // heavy hammer monitor
>`1,18,buffs: @buffs.string@
>`1,15,@c.potionType@ active |
^ @buffs.string = ":"+c.potionType@\n
^
^@c.potionType@ time > 30 |
^ @buffs.GetTime(c.potionType) > 30@ (
^@buffs.GetTime(c.potionType)@) */

/* // abilities monitor:
var canUseAblt = c.canUseAbility("heavy_hammer")
canUseAblt = c.canUseAbility("heavy_hammer")

var abltCol = "#ff0000"
abltCol = "#ff0000"
?canUseAblt
  abltCol = "#00ff00"

>`1,12,#magenta,heavy_hammer cd:
^ @item.GetCooldown("heavy_hammer")@
>`1,13,@abltCol@,canAct: @canUseAblt@ */

/* // monitor post-treasure metrics
var treasureCol = #888888
?end_t > 0 | old_t ! item.GetTreasureCount()
  treasureCol = #aaff00
:
  treasureCol = #888888
>`1,14,@treasureCol@,
^treasure:\n
^  old | @old_t@ (t = @end_t@)
>`1,16,
^  cur | @item.GetTreasureCount()@\n
^  cap | @item.GetTreasureLimit()@ */

// foe distance monitor
?foe.distance ! 9999 & (
^isBossScr | isMinibossScr)
  >f0,10,#magenta,d:#@foe.distance@

// bfg ds screens monitor
var bfgDsTargetScr = null
bfgDsTargetScr = c.getScreen_DS("blade",
^                               "TARGET")

?bfgDsTargetScr &
^loc.id = "bronze_mine" & (
^loc.stars <= 10 | nRuns > 1)
  var bfgCol = #00ff00

  ?screen.i > bfgDsTargetScr
    bfgCol = #888888
  :?screen.i < bfgDsTargetScr
    bfgCol = #ffff00
  : // screen.i = bfgDsTargetScr
    bfgCol = #00ff00

  >`1,9,@bfgCol@,bfg: @screen.i@/
  ^@bfgDsTargetScr@

// powerupCount monitor:
?isBossScr
  var powerupCol
  powerupCol = #88ff00
  ?powerupCount = 1
    powerupCol = #ffff00
  :?powerupCount = 2
    powerupCol = #ff8800
  :?powerupCount >= 3
    powerupCol = #ff0000
  >`1,11,@powerupCol@,powerupCount: @powerupCount@

/* // item states monitor:
>`1,14,#magenta,ils: @item.left.state@ | 
^irs: @item.right.state@ */

?nRuns < 5
  // monitor permapotSetup
  var permapotCol
  ?c.permapotSetup
    permapotCol = #00ff00
  :
    permapotCol = #ff0000
  >`1,13,@permapotCol@,permapot setup

  // monitor effect durations
  ?buffs.string = ":"+c.potionType
    var potTime
    potTime = buffs.GetTime(c.potionType)

    >`1,12,#0066ff,@c.potionType@: @potTime@f 
    ^(@time.FormatDigital(potTime, true)@)

// show any logged errors
?log.hasErrors()
  >`1,@screen.h - 2 - 5@,#ff0000,errorCount: 
  ^@log.getErrorCount()@\n
  >@log.getError()@

// ............. WITHDRAWAL LOGIC ............ //

?(foe ! "boss" &
^s.getTotalHP("player") <= s.getFoeDmg()) |
^old_t = item.GetTreasureLimit()
  loc.Leave()

// ............... INIT LOGIC ............... //

// Permapot equipment
?c.permapotSetup
  a.ldtF("permapot")

c.AAC(a.hAeff, a.shAdef)
// c.AAC("sword *0 +0", "hatchet")

// Initial equipments
?loc.begin
  a.ldtF("default")

// activate potion when in permapot
:?c.canUsePotion() & c.permapotSetup
  activate potion

// ........... POST-TREASURE LOGIC .......... //

:?loc.stars > 10 & end_t > 1 & isBossScr
  // pickup treasure
  ?pickup.distance < 15
    a.ldtF("magnet")

  // activate potion
  :?c.canUsePotion() & end_t > 57
    activate potion

  // speed up
  :?c.canUseAbility("staff_fire") &
  ^ end_t > 57 & item.potion = "empty"
    c.useAbility_TH("staff_fire", a.stFh)

  : // regen armor
    a.ldtF("defense armor regen")

// .............. SUMMON LOGIC .............. //

:?c.canSummon("voidweaver") &
^ loc.id = "bronze_mine" &
^ screen.i < lastFoeScr
  c.useAbility_OH("aether_talisman",
  ^               "aether_talisman", hand)

:?c.isCasting("fire_talisman") | (
^ c.canSummon("cinderwisp") & ((
^ loc.id = "bronze_mine" & (
^ screen.i = lastFoeScr + 1 |
^ screen.i = lastFoeScr & foe.count = 1)) |
^ boss_locs.Contains(loc.id)))
  c.useAbility_OH("fire_talisman",
  ^               "fire_talisman", hand)

// ............. DEFENSIVE LOGIC ............ //

// parry Bronze Guardian's Bomb attack
:?c.canUseAbility("shovel") &
^ isBossScr & foe.state = 32 &
^ foe.time >= 15 & powerupCount >= 3 &
^!(c.permapotSetup &
^ buffs.GetTime(c.potionType) <= 30)
  >c0,0,#red,SHOVEL
  c.useAbility_TH("shovel", shovel)

// boss's hammer attack
:?isBossScr & foe.state = 32 &
^ foe.time >= 30
  >c0,0,#red,BOSS ATTACK

  ?c.canUseAbility("staff_vigor") &
  ^c.canUseAbility("staff_ice") &
  ^((10*armor)+armor.f) > 1 + (10* (
  ^s.getHIArmor("staff_vigor") +
  ^s.getHIArmor("staff_ice")))
    c.useAbility_TH("staff_vigor", a.stVh)
  
  // block bomb attack
  :?c.canUseAbility("staff_ice") &
  ^foe.distance = 20 &
  ^s.getTotalHP("player") >= s.getFoeDmg() & !(
  ^c.permapotSetup &
  ^buffs.GetTime(c.potionType) <= 30)
    c.useAbility_TH("staff_ice", a.stIh)
  :
    fight("escape")

// ............. CUTSCENES LOGIC ............ //



// ......... ENGAGING/WALKING LOGIC ......... //

// speed up
:?c.canUseAbility("staff_fire") &
^ buffs.string ! "buff_inf_speed" & (
^ loc.stars <= 15 | nRuns > 1) &
^ loc.id = "bronze_mine" & !(
^ isMinibossScr | encounter.isElite) & (
^ screen.i = 0 | screen.i = lastFoeScr + 1)
  c.useAbility_TH("staff_fire", a.stFh)

// mini-dash
:?c.canUseAbility("quarterstaff") &
^ ai.walking & ai.enabled & !ai.paused &
// Cannot dash and in dashing range
^!((canDash & a.canSmartDash()) |
// in melee range or permapot setup run
^ s.inRange("sword") | c.permapotSetup)
  c.useAbility_TH("quarterstaff", a.myQ)

// pickup logic
:?pickup.distance < 15 &
// foe is farther than pickup
^(foe.distance > 15 | foe.distance = 9999)
  a.ldtF("magnet")

// armor regen logic
:?(ai.walking & !s.inRange("socketed_shield")) |
^(ai.paused | !ai.enabled |
^ player.direction = -1)
  >c0,0,#red,ARMOR REGEN
  a.ldtF("defense armor regen")

// engaging logic (out of fighting range)
:?ai.walking & player.direction = 1 &
^ s.inRange("socketed_shield") & ((
^ canDash & !s.inRange("dash_max")) |
^!s.inRange("crossbow") |
^ pos.z ! math.Clamp(pos.z, foe.z -3, foe.z +3))
  >c0,0,#red,ENGAGING OFF-FIGHT
  
  ?armor > a.CmaE | (
  ^c.canEngage() & foe ! "phase")
    a.ldtF("engage")
  :
    a.ldtF("defense armor regen")

// .............. RANGED LOGIC .............. //

// Insta-kill Enfused elites
:?encounter.eliteMod = "enfused" &
^ foe ! "spawn" & s.inRange("wand")
  canDash = false
  a.ldtF("magic debuff burn")

// Miniboss screen - normal foes
:?isMinibossScr & foe ! "explode" &
^ foe.GetCount(itemSplash) > 1 & (
^ c.permapotSetup | (
^ loc.stars > 15 & nRuns = 1))
  >c0,0,#red,MINIBOSS NORMAL FOES

  canDash = false
  a.ldtF("ranged dmg")

// AOE logic (ranged)
:?foe.count > 3 & !canUseVwv & !(
^ c.isCasting("hidden") |
^ c.isCasting("heavy_hammer"))
  >c0,0,#red,AOE RANGED

  canDash = false

  // ranged debuff
  ?tracker.canTrack("Weaken") &
  ^ s.inRange("wand")
    a.ldtF("magic debuff weaken")
  :?tracker.canTrack("Chill") &
  ^ s.inRange("wand")
    a.ldtF("magic debuff chill")
  :?tracker.canTrack("Burn") &
  ^ s.inRange("wand")
    a.ldtF("magic debuff burn")

  // Align foes
  :?c.canUseAbility("wand_stone") &
  ^ foe = "elite" & s.inRange("wand")
    >c-10,0,#red,USING GRAVITY WAND
    c.useAbility_OH("wand_stone", a.wSh, hand)

  : // crossbow damage
    a.ldtF("ranged dmg")

// .............. DASHING LOGIC ............. //

:?c.canUseAbility("dash") &
^ canDash & foe = "explode"
  a.ldtF("dash")

:?a.canSmartDash() & canDash
  a.smartDash()

// ****************************************** //
/* // Knockback farming
// TODO: add it back when I have it at +21
:?c.canKbFarm()
  c.smoothCast(a.bS) */

// Knockback farming (alt)
:?c.canKbFarm()
  c.smoothCast(a.bAdmg)
// ****************************************** //

/* if in range, get closer while trying to
unmake with repeating crossbow. */
:?c.canSmoothCast(true) & canDash &
^ loc.id = "bronze_mine"
  c.smoothCast(a.bR)

// engaging logic (within fighting range)
:?ai.walking & player.direction = 1 &
^ loc.id = "bronze_mine" &
^ canDash & !a.canSmartDash() &
^ s.betweenRange("triskelion", "dash_max")
  a.ldtF("engage")

// get in melee range faster
:?c.canStutterStep()
  c.stutterStep()

// ............... BOSS LOGIC ............... //

// Boss fight (Bronze Guardian)
:?isBossScr
  >c0,0,#green,BOSS FIGHT
  
  canDash = false

  ?c.canKillCinderwisp(a.cwpMiN, 0) |
  ^c.isCinderwispCap(a.cwpMiN)
    c.devour("cinderwisp")

  ?c.canUsePotion()
    activate potion

  // boss's hammer's stuck
  ?foe.state = 33 & foe.time < 180
    canDash = true
  
    ?!s.inRange("triskelion")
      a.ldtF("default")

    :?(c.canUseAbility("bardiche") & (
    ^ c.permapotSetup | hp = maxhp) &
    ^ buffs.string = ":"+c.potionType &
    ^ buffs.GetTime(c.potionType) > 60) |
    ^ c.isCasting("bardiche")
      c.useAbility_TH("bardiche", Kubikiribocho)
    :
      fight("normal")

  :?c.canUseAbility("staff_poison") &
  ^!s.inRange("dash")
    c.useAbility_TH("staff_poison", a.stPh)

  :?c.canUseAbility("mask")
    c.useAbility_OH("mask", "mask", "r")

  // heavy hammer
  :?(c.canUseAbility("heavy_hammer") &
  ^ buffs.string = ":"+c.potionType &
  ^ buffs.GetTime(c.potionType) > 30) |
  ^ c.isCasting("heavy_hammer")
    >c0,1,#yellow,HH ABILITY!!!
    c.useAbility_TH("heavy_hammer", Mjölnir)

  :
    fight("normal")

// ............ SPECIAL FOE LOGIC ........... //

// Bomb Cart screen logic
:?isMinibossScr & foe = "explode"
  >c0,0,#red,BOMB CART!!!

  // use Prevention Staff to keep moving while frozen
  ?c.canUseAbility("staff_vigor") &
  ^c.canUseAbility("staff_ice") &
  ^((10*armor)+armor.f) > 1 + (10* (
  ^s.getHIArmor("staff_vigor") +
  ^s.getHIArmor("staff_ice")))
    c.useAbility_TH("staff_vigor", a.stVh)

  /* // get closer with shovel
  ?!s.inRange("shovel")
    equip shovel */

  // get closer with Star stone
  ?foe.distance > 1
    ?item.left
      equip shovel
    equipR star

  /* use Eternity Staff to tank damage if
  hp + armor is more than its damage */
  :?c.canUseAbility("staff_ice") &
  ^ s.getTotalHP("player") >= minibossDmg[loc.stars - 11]
    c.useAbility_TH("staff_ice", a.stIh)

  :?buffs.string ! "buff_frozen"
    fight("evade")
  :
    fight("normal")

// ................ AOE LOGIC ............... //

:?foe.GetCount(itemSplash) > 1 &
^!c.isCasting("hidden")
  >c0,0,#red,MELEE AOE

  // Heavy hammer logic
  ?(c.canUseAbility("heavy_hammer") &
  ^ encounter.eliteMod = "plated") |
  ^c.isCasting("heavy_hammer")
    c.useAbility_TH("heavy_hammer", Mjölnir)

  // ........................................ //

  // Stun/Perma-stun logic
  :?s.inRange("grappling_hook") &
  ^foe ! "warcaster" & !(
  ^c.isCasting("bardiche") |
  ^c.isCasting("wand")) & (
  ^es.canDebuff("Stun") | (
   // stun time (frames) running out
  ^stunTime = math.Clamp(stunTime, 1, 11) &
   // not stunned with heavy hammer or Frost Wand
  ^foe.debuffs.string ! "debuff_armor_fatigue"/* &
  ^foe.debuffs.string ! "debuff_frost_stun"*/))
    itemSplash = foe.distance + 5
    a.ldtF("grappling")

  // Debuff and unmake
  :?nRuns = 1 | encounter.eliteMod = "blessed"
    itemSplash = foe.distance + 7

    ?tracker.canTrack("Weaken")
      a.ldtF("magic debuff weaken")
    :?tracker.canTrack("Chill")
      a.ldtF("magic debuff chill")
    :?tracker.canTrack("Burn")
      a.ldtF("magic debuff burn")
    :
      itemSplash = 10
      a.ldtF("big sword unmake")

  // unmake
  :?buffs.string = "ʘ" | !( // berserk pot
  ^ foe.buffs.string = "stability" | (
  ^ buffs.string = "buff_infernal" &
  ^ encounter.eliteMod ! "hydra"))
    itemSplash = 10
    a.ldtF("big sword unmake")

  // Align foes
  :?c.canUseAbility("wand_stone") &
  ^ foe = "elite" &
  ^ s.inRange("sword")
    >c-10,0,#red,USING GRAVITY WAND
    c.useAbility_OH("wand_stone", a.wSh, hand)
  :
    equip Kubikiribocho

// ................ 1V1 LOGIC ............... //

:
  >c0,0,#red,1V1 FIGHT
  fight("normal")

// .......... SPECIAL ITEMS LOGIC ......... //

// Voidweaver ability
?c.canUseAbility("voidweaver") &
^c.canUnmakeVoidweaver() & !(
^isMinibossScr | encounter.isElite) &
^foe.count > 1
  canUseVwv = true
  canDash = true

  ?s.inRange("sword")
    c.devour("voidweaver")
:
  canUseVwv = false

?loc.id = "bronze_mine" & !canUseVwv &
^ foe.count > 1 & s.inRange("wand")
  // Calamity - reduce hp
  ?c.canUseAbility("wand_aether") & hardElite
    c.useAbility_OH("wand_aether", a.wAh, hand)

  // Reset buff
  :?c.canUseAbility("wand_vigor") &
  ^ foe.buffs.string = "stoic"
    c.useAbility_OH("wand_vigor", a.wVh, hand)

  // Reduce damage
  :?c.canUseAbility("wand_poison") &
  ^(hardElite | encounter.eliteMod = "hydra")
    c.useAbility_OH("wand_poison", a.wPh, hand)

  // Stun enemies
  :?c.canUseAbility("wand_ice") &
  ^ encounter.eliteMod = "lucky"
    c.useAbility_OH("wand_ice", a.wIh, hand)

  // extend range
  :?c.canUseAbility("staff_aether") &
  ^ encounter.eliteMod = "lucky"
    c.useAbility_TH("staff_aether", a.stAh)

// .......................................... //

?buffs.string = "buff_range"
  itemSplash += 10

// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ //
// ┃ ▄▀▄▀▄▀▄▀▄▀▄ END OF "6-Mine" ▀▄▀▄▀▄▀▄▀▄ ┃ //
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ //
