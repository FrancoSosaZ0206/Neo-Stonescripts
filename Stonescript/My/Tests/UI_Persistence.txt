/* For more info about this file, see
UI_Persistence_README.md */

// ==============================================
// PUBLIC
// ==============================================

// functions:
func main()
  // Clear old UI elements (recycling/destruction)
  ?canDestroy()
    destruct()

  // Initialization / reset
  ?canConstruct()
    construct()
  
  // Mainteinance
  ?canUpdate()
    update()

// ==============================================
// PRIVATE
// ==============================================

// imports:
var uimkr = import My/Lib/UI_Maker

// variables:
var uiPanel = null
var uiText = null


// functions:

// returns true if, at the start of each run,
// either uiPanel or uiText are not null.
func canDestroy()
  return canConstruct() & (uiPanel | uiText)

// destroys this script's ui components, if needed.
func destruct()
  ?uiPanel
    uimkr.destruct(uiPanel)
    uiPanel = null
    uiText = null

// Returns true on the first frame of every run
func canConstruct()
  return loc.begin | loc.loop

// --- Initializes the persistent UI (panel + text) ---
func construct()
  // Create container panel
  var panel = ui.AddPanel()
  panel.w = 20
  panel.h = 5
  panel.color = "#333333"
  panel.anchor = "top_left"
  panel.dock = "top_left"
  panel.x = 1
  panel.y = 1

  // Add text element inside the panel
  var text = ui.AddText("Waiting...") // placeholder string
  text.color = "#ffffff"
  panel.Add(text)

  // Store for use by update()
  uiPanel = panel
  uiText = text

// Returns true if both uiPanel and uiText are not null
func canUpdate()
  return uiPanel & uiText

// --- Updates UI content every frame ---
func update()
  // Force visibility, even during suppression
  uiPanel.visible = true
  uiText.visible = true

  // Dynamic content logic
  ?foe // ! null (not needed to explicitly check)
    uiText.text = string.Format("Fighting: {0}\nHP: {1}/{2}",
    ^                           foe.name, foe.hp, foe.maxhp)
  : // !foe
    ?harvest
      uiText.text = "Harvesting: " + harvest
    :
      uiText.text = "Exploring: " + loc.name
