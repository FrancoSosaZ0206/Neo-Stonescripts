// Variables:

// 2-D array
var debuffTracker = [[]]

// Functions:

func trackDebuffs()
  for i = 0 .. debuffTracker.Count() - 1
    var row = debuffTracker[i]
    var itemName = row[0]
    var debuffName = row[1]
    var launched = row[2]
    var landed = row[3]

    // Detect launch
    ?!launched &
    ^((item.left = itemName & item.left.state = 3) |
    ^ (item.right = itemName & item.right.state = 3))
      row[2] = true

    // Detect landing
    ?launched & foe.debuffs.string = debuffName
      row[3] = true

    // Remove set when debuff disappears
    ?landed & foe.debuffs.string ! debuffName
      debuffTracker.RemoveAt(i)
      i-- // adjust index since the array shrunk

func addDebuffSet(itemName, debuffName)
  var exists = false

  // Search if set already exists in debuffTracker
  for i = 0 .. debuffTracker.Count() - 1
    var row = debuffTracker[i]
    ?row[0] = itemName & row[1] = debuffName
      exists = true

  // Add set if new
  ?!exists
    debuffTracker.Add([itemName, debuffName, false, false])

// Procedure:

trackDebuffs()

addDebuffSet("wand", "dot")
addDebuffSet("bow", "damage")

// Monitor:


