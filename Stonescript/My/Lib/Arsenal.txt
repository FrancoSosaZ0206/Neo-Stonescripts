//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀ START OF "Arsenal" ▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //

// For info, see Arsenal_README.

// //////////////// IMPORTS ///////////////// //

var log = import My/Lib/Error_Logging/public

var c = import My/Lib/Combat
var s = import My/Lib/Stats

var es = import My/Lib/Effect_Stats/public

// /////////////// VARIABLES //////////////// //

// ************** ITEM ALIASES ************** //

// Elemental

// ................. POISON ................. //

var sPdmg   = "*max sword -big poison -dP" // 2nd
var bsPdmg  = "*max sword big poison -dP"
var bsPeff  = "*max sword big poison dP"
var hPeff   = "*max hammer poison aP"
var shPdef  = "*max shield poison -ap"
var shPeff  = "*max shield poison ap"
var bPdmg   = "*max crossbow poison -dP"
var bPeff   = "*max crossbow poison dP"
var wPdmg   = "*max wand poison -dP -hidden"
var wPeff   = "*max wand poison dP -hidden"
var stPeff  = "*max staff poison dP -hidden"

// ................. VIGOR .................. //

var sVdmg   = "*max sword -big vigor -dL Spring24" // 2nd
var sVeff   = "*max sword -big vigor dL -gold" // 2nd (enchanted: speed)
var bsVdmg  = "*max sword vigor -dL"
var bsVeff  = "*max sword vigor dL"
var hVeff   = "*max hammer vigor ah"
var shVdef  = "*max shield vigor -ah"
var shVeff  = "*max shield vigor ah"
var bVeff   = "*max crossbow vigor dL"
var bVdmg   = "*max crossbow vigor -dL"
var wVeff   = "*max wand vigor dL -hidden"
var wVdmg   = "*max wand vigor -dL -hidden" // 2nd
var stVeff  = "*max staff vigor dL -hidden"

// ................. AETHER ................. //

var sAdmg   = "*max sword -big aether -dU" // 2nd
var sAeff2  = "*max sword -big aether dU -golden" // 2nd
var bsAdmg  = "*max sword big aether -dU -golden"
var bsAeff  = "*max sword big aether dU shiny" // 2nd (enchanted: speed, unmake chance)
var hAeff   = "*max hammer aether aU"
var shAdef  = "*max shield aether -au"
var shAeff  = "*max shield aether au"
var bAdmg   = "*max crossbow aether -dU"
var bAeff   = "*max crossbow aether dU"
var wAeff   = "*max wand aether dU -hidden"
var wAdmg   = "*max wand aether -dU -hidden"
var stAeff  = "*max staff aether dU -hidden"

// .................. FIRE .................. //

var sFdmg   = "*max sword -big fire -dF"
var sFeff   = "*max sword -big fire dF"
var bsFdmg  = "*max sword big fire -dF"
var bsFeff  = "*max sword big fire dF"
var hFeff   = "*max hammer fire aF"
var shFdef  = "*max shield fire -af"
var shFeff  = "*max shield fire af"
var bFdmg   = "*max crossbow fire -dF"
var bFeff   = "*max crossbow fire dF"
var wFeff   = "*max wand fire dF -hidden"
var wFdmg   = "*max wand fire -dF -hidden"
var stFeff  = "*max staff fire dF -hidden"

// .................. ICE ................... //

var sIeff   = "*max sword -big ice dI -prismatic"
var sIdmg   = "*max sword -big ice -dI"
var bsIeff  = "*max sword big ice dI"
var bsIdmg  = "*max sword big ice -dI"
var hIeff   = "*max hammer ice aI"
var shIdef  = "*max shield ice -ai"
var shIeff  = "*max shield ice ai"
var bIdmg   = "*max crossbow ice -dI"
var bIeff   = "*max crossbow ice dI"
var wIeff   = "*max wand ice dI -hidden -golden" // 2nd
var wIdmg   = "*max wand ice -dI -hidden"
var stIeff  = "*max staff ice dI -hidden"

// .................. STONE ................. //

var shS     = "*max shield stone" // enchanted: dodge chance
var bS      = "0* crossbow stone socketed +21" // enchanted: speed

// ................. HIDDEN ................. //

// Wands
var wPh     = "*max wand_hidden_poison"  // aka Plague Wand
var wVh     = "*max wand_hidden_vigor"   // aka Reset Wand
var wAh     = "*max wand_hidden_aether"  // aka Calamity Wand
var wFh     = "*max wand_hidden_fire"    // aka Explosive Wand
var wIh     = "*max wand_hidden_ice"     // aka Frost Wand
var wSh     = "*max wand_hidden_stone"   // aka Gravity Wand

// Staves
var stPh    = "*max staff_hidden_poison" // aka Berserker Staff
var stVh    = "*max staff_hidden_vigor"  // aka Prevention Staff
var stAh    = "*max staff_hidden_aether" // aka Grasping Staff
var stFh    = "*max staff_hidden_fire"   // aka Infernal Staff
var stIh    = "*max staff_hidden_ice"    // aka Eternity Staff
var stSh    = "*max staff_hidden_stone"  // aka Acrobatic Staff

// ............... ALTERNATE ................ //

var bAlt    = "*max crossbow golden -socketed"

// ............ SPECIAL WEAPONS ............. //

var myQ     = "*max quarterstaff"
var fastB   = "*max bardiche" // enchanted: speed
var bR      = "*max crossbow repeating golden" // enchanted: pierce
var shC1    = "*max shield compound shiny" // enchanted: armor
var shC2    = "*max shield compound -shiny" // enchanted: armor/s
var shT     = "*max shield towering golden"

// ................ GROUPING ................ //

var burstSwords = [
^     Mamba Negra     , sPdmg,
^     Dothaneel       , sVdmg,
^     Void Slayer     , sAdmg,
^     Vantum Phoenix  , sFdmg,
^     Bifrost         , sIdmg
^]

// ************* SPECIAL STATS ************** //

// ............. BUFFS/DEBUFFS .............. //

// amount of damage reduced by dP affix weapons
var weaken_default = 4

// amount of health healed when using an ah affix weapon
var ah_heal = 2

// Plague Wand's enchantment level
var plagueLvl = 11
// Berserker Staff's enchantment level
var berserkerLvl = 21

// ............ COMPOUND SHIELD ............. //

var compoundMaxArmor_default = 14
var compoundMaxArmor_boosted = 35

// .............. CULTIST MASK .............. //

// mask's current star level
var maskLvl = 9

// ........ BLADE OF THE FALLEN GOD ......... //

var bladeDmg = 310
var bladeDmgR = 170
var smiteDmg = 40 // smite flat bonus damage

// .............. SKELETON ARM .............. //

var armDmg = 56
var armDmgR = armDmg / 2
var armEffCap = "pick_pocket:4"

// ............... CINDERWISP ............... //

// multiplied by the amount of Ignition buffs:
var cinderwispDmg_Default = 36
var cinderwispDmg_Boosted = 96
var maxIgnitions_Default = "ignition:10"
var maxIgnitions_Boosted = "ignition:17"

// ............... VOIDWEAVER ............... //

var voidweaverDmg_Default = 1
// var voidweaverDmg_Boosted = 1
var voidweaverUnmakeChance = 0.14 // %
var voidweaverArmor_Default = 0.7
var voidweaverArmor_Boosted = 1.35

// .............. HEAVY HAMMER .............. //

var heavyHammerDmg = 145

// ................ BARDICHE ................ //

// Assuming *max level
var bardicheDmg_Default = 52
var bardicheDmg_Boosted = 107
var bardicheMult_Default = 4
var bardicheMult_Boosted = 13.5

// ............ FUNCTION RELATED ............ //

// /////////////// FUNCTIONS //////////////// //

func ldtF(mode)
  // sanitize entry
  mode = string.ToLower(mode)

  ?mode = "start" | mode = "begin" | mode = "default"
    equipL triskelion
    ?loc.begin | loc.loop | !c.permapotSetup
      equipR @shC1@

  :?mode = "engage"
    // Left hand:
    ?totaltime % 2 = 0 | // every even frame
    ^buffs.string = "buff_inf_speed" // infernal staff
      equipL triskelion
    :
      ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
        equipL @hIeff@
      :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
        equipL @hPeff@
      :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
        equipL @hVeff@
      :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
        equipL @hAeff@
      :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
        equipL @hFeff@
      :
        ?hp ! maxhp
          equipL @hVeff@
        :?armor <= maxarmor
          equipL quest
        :
          equipL ki stone

    // Right hand:
    ?!c.permapotSetup
      // elemental A shields
      ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
        equipR @shIdef@
      :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
        equipR @shPdef@
      :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
        equipR @shVdef@
      :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
        equipR @shAdef@
      :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
        equipR @shFdef@

      // on-engage debuffs
      :?es.isDebuffable() & !es.isImmuneTo("debuff_chill") &
      ^ foe.debuffs.GetCount("debuff_chill") < 1
        equipR @shIeff@
        >o0,1,#cyan,ai shield

      // Normal armor (mode = "defense armor regen")
      :?armor < compoundMaxArmor_default
        equipR @shC2@
      : // armor = math.Clamp(armor, compoundMaxArmor_default, compoundMaxArmor_boosted)
        equipR @shC1@

  :?mode = "extend" | mode = "permapot"
    ?item.right ! "bardiche" &
    ^item.right ! "quarterstaff" &
    ^item.right ! "heavy_hammer"
      equipR mask
  :?mode = "bash" | mode = "dash"
    ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
      equipL Bifrost
    :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
      equipL Mamba Negra
    :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
      equipL Dothaneel
    :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
      equipL Void Slayer
    :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
      equipL Vantum Phoenix
    :
      equipL Bifrost
      // Unbroken Faith

    ?mode = "bash"
      equipR bashing shield
    :?mode = "dash"
      equipR Subspace Bubble
  :?mode = "grappling"
    equipL grappling
    ?!c.permapotSetup
      equipR moon

  :?mode = "escape" | mode = "mind" | mode = "mindstone"
    equipL mind

    ?!c.permapotSetup
      ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
        equipR @shIdef@
      :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
        equipR @shPdef@
      :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
        equipR @shVdef@
      :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
        equipR @shAdef@
      :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
        equipR @shFdef@
      :
        equipR @shT@
  :?mode = "magnet" | mode = "star" | mode = "star stone"
    ?c.permapotSetup
      equipL star
    :
      ?pickup = "treasure"
        equipL star
        ?armor < compoundMaxArmor_default
          equipR @shC2@
        :
          equipR @shC1@
      :
        equipL triskelion
        equipR star
  :?mode = "harvest"
    ?loc = "rocky_plateau"
      equip shovel
    :?loc = "deadwood_valley"
      equipL moon
      equipR hatchet

  :?mode = "defense" // evade/buff/debuff when hit
    // Special cases (both left and right are dedicated to the loadout's goal)
    ?mode = "heal"
      equipL @hVeff@
      ?!c.permapotSetup
        equipR @shVeff@
    :?mode = "unmake" // unmake when hit
      ?foe.count > 1
        equipL @bsAeff@
      :
        equipL Existential Crisis

      ?!c.permapotSetup
        equipR @shAeff@

    :?mode = "armor regen"
      // Left hand:
      ?!ai.walking | // standing still
      ^!ai.enabled | ai.paused // cutscene walking
        ?(item.right = "compound" & armor <= compoundMaxArmor_boosted + 2) |
        ^armor <= 2
          equipL quest
        :?hp ! maxhp // passive regen
          equipL ouroboros
        : // try to deal extra damage if possible
          equipL fissure
      :?ai.walking &
      ^totaltime % 2 = 0 | buffs.string = "buff_inf_speed"
        equipL triskelion
      :
        equipL quest

      // Right hand:
      ?!c.permapotSetup
        ?armor < compoundMaxArmor_default
          equipR @shC2@
        : // armor = math.Clamp(armor, compoundMaxArmor_default, compoundMaxArmor_boosted)
          equipR @shC1@

    :
      // Left hand
      /*?foe.count > 1 // wands
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equipL @wIdmg@
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equipL @wPdmg@
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equipL @wVdmg@
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equipL @wAdmg@
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equipL @wFdmg@
        : // foe = "stone"
          equipL @wSh@
      :*/
      ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
        equipL Bifrost
      :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
        equipL Mamba Negra
      :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
        equipL Dothaneel
      :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
        equipL Void Slayer
      :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
        equipL Vantum Phoenix
      : // foe = "stone"
        equipL Bifrost // Unbroken Faith

      ?!c.permapotSetup
        // Right hand
        ?mode = "tank"
          equipR @shT@
        :?mode = "stun"
          equipR @shC1@

        :?mode = "buff" | mode = "debuff"
          ?mode = "poison" | mode = "empower"
            equipR @shPeff@
          :?mode = "vigor" | mode = "heal"
            equipR @shVeff@
          :?mode = "aether" | mode = "unmake"
            equipR @shAeff@
          :?mode = "fire" | mode = "burn"
            equipR @shFeff@
          :?mode = "ice" | mode = "chill"
            equipR @shIeff@

        :?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equipR @shIdef@
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equipR @shPdef@
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equipR @shVdef@
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equipR @shAdef@
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equipR @shFdef@
        : // foe = "stone"
          equipR @shS@

  :?mode = "sword" & mode ! "big" // normal swords
    // Special cases:
    ?mode = "heal"
      ?c.permapotSetup
        equipL Soulfetcher
      :
        /*var sDmg = null
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          sDmg = Bifrost
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          sDmg = Mamba Negra
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          sDmg = Dothaneel
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          sDmg = Void Slayer
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          sDmg = Vantum Phoenix
        : // foe = "stone
          sDmg = Unbroken Faith*/

        c.moonjuggle(Soulfetcher, sVeff)
    :?mode = "unmake"
      ?c.permapotSetup
        equipL Existential Crisis
      :
        var sword = null
        // put a 2nd dU sword when we have it
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          sword = Bifrost
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          sword = Mamba Negra
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          sword = Dothaneel
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          sword = Void Slayer
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          sword = Vantum Phoenix
        : // foe = "stone"
          sword = Bifrost // Broken Faith

        c.moonjuggle(Existential Crisis, sword) // sAeff2
    :?mode = "debuff"
      ?c.permapotSetup // all left hand
        ?es.canDebuff("debuff_chill") & (mode = "auto" | mode = "chill")
          equipL Almafuerte
        :?es.canDebuff("debuff_damage") & (mode = "auto" | mode = "weaken")
          equipL Death's Kiss
          //'
        :?es.canDebuff("debuff_dot") & (mode = "auto" | mode = "burn")
          equipL @sFeff@

      : // !c.permapotSetup
        var sDmg = null
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          sDmg = Bifrost
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          sDmg = Mamba Negra
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          sDmg = Dothaneel
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          sDmg = Void Slayer
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          sDmg = Vantum Phoenix
        : // foe = "stone"
          sDmg = Bifrost // Unbroken Faith

        ?es.canDebuff("debuff_chill") & (mode = "auto" | mode = "chill")
          c.moonjuggle(Almafuerte, sIeff)
        :
          equipL moon
          ?es.canDebuff("debuff_damage") & (mode = "auto" | mode = "weaken")
            equipR Death's Kiss
            //'
          :?es.canDebuff("debuff_dot") & (mode = "auto" | mode = "burn")
            equipR @sFeff@
    :?mode = "dmg"
      ?c.permapotSetup // all left hand
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equipL Bifrost
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equipL Mamba Negra
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equipL Dothaneel
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equipL Void Slayer
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equipL Vantum Phoenix
        : // foe = "stone"
          equipL Bifrost // Unbroken Faith

      : // !c.permapotSetup
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          c.moonjuggle(Bifrost, sIdmg)
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          c.moonjuggle(Mamba Negra, sPdmg)
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          c.moonjuggle(Dothaneel, sVdmg)
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          c.moonjuggle(Void Slayer, sAdmg)
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          c.moonjuggle(Vantum Phoenix, sFdmg)
        : // foe = "stone"
          c.moonjuggle(Bifrost /*Unbroken Faith*/, sIdmg /*Broken Faith*/)
  :?mode = "big sword" // TO DO: big swords
    // Special cases:
    ?mode = "heal"
      ?c.permapotSetup
        equipL @bsVeff@
      :
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          // c.moonjuggle(,)
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          // c.moonjuggle(,)
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          // c.moonjuggle(,)
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          // c.moonjuggle(,)
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          // c.moonjuggle(,)
        : // foe = "stone"
          // c.moonjuggle(,)
    :?mode = "unmake"
      ?c.permapotSetup
        equipL @bsAeff@
      :
        equipL @bsAeff@
        equipR Existential Dread
    :?mode = "debuff"
      ?c.permapotSetup // all left hand
        ?es.canDebuff("debuff_chill")
          // equipL 
        :?es.canDebuff("debuff_damage")
          // equipL 

      : // !c.permapotSetup

        // Left hand:
        ?es.canDebuff("debuff_damage")
          // equipL 
        :?es.canDebuff("debuff_chill")
          // equipL 

        // Right hand:
        ?es.canDebuff("debuff_chill")
          // equipR 
    :?mode = "dmg"
      ?c.permapotSetup // all left hand
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          // equipL 
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          // equipL 
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          // equipL 
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          // equipL 
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_ice") | mode = "fire"
          // equipL 
        : // foe = "stone"
          // equipL 

      : // !c.permapotSetup
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          // c.moonjuggle(,)
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          // c.moonjuggle(,)
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          // c.moonjuggle(,)
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          // c.moonjuggle(,)
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          // c.moonjuggle(,)
        : // foe = "stone"
          // c.moonjuggle(,)

  :?mode = "magic" // wands and staves
    ?mode = "heal"
      ?c.permapotSetup
        equipL @wVeff@
      :
        // equip @stVeff@
        equipL moon
        equipR @wVeff@
    :?mode = "unmake"
      ?c.permapotSetup
        equipL @wAeff@
      :
        equipL moon
        equip @wAeff@
        // equip @stAeff@
    :?mode = "debuff"
      ?c.permapotSetup
        ?mode = "chill"
          equipL Frosty Crust
        :?mode = "weaken"
          equipL @wPeff@
        :?mode = "burn"
          equipL @wFeff@
      :
        ?mode = "chill"
          equipL moon
          equipR Frosty Crust
        :?mode = "weaken"
          equipL moon
          equipR @wPeff@
        :?mode = "burn"
          equipL moon
          equip @wFeff@

    :?mode = "dmg"
      ?c.permapotSetup // all left hand
        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equipL @wIdmg@
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equipL @wPdmg@
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equipL @wVdmg@
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equipL @wAdmg@
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equipL @wFdmg@
        : // foe = "stone"
          equipL Frosty Crust // @wSdmg@
      : // !c.permapotSetup
        equipL moon

        ?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equipR @wIdmg@
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equipR @wPdmg@
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equipR @wVdmg@
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equipR @wAdmg@
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equipR @wFdmg@
        : // foe = "stone"
          equipR Frosty Crust // @stSdmg@
  :?mode = "ranged" // crossbows
    ?c.permapotSetup
      equipL @bAlt@

    : // !c.permapotSetup
      ?mode = "heal"
        equipL @wVeff@
        equipR Frosty Crust
        // @bVeff@
      :?mode = "unmake"
        ?c.canSmoothCast(false)
          c.smoothCast(bAeff)
        :
          equip @bAeff@

      :?mode = "debuff"
        ?mode = "chill"
          equip @bIeff@
        :?mode = "weaken"
          equipL moon
          equipR @wPeff@
          // @bPeff@

      :?mode = "knockback"
        equip bS

      :?mode = "dmg" // TO DO: Uncomment when we have all D crossbows maxed out
        ?c.canSmoothCast(false)
          c.smoothCast(bAdmg)
        :
          equip @bAdmg@

        /*?(foe = "poison" & foe.buffs.string ! "adaptive_defense_ice") | mode = "ice"
          equip @bIdmg@
        :?(foe = "vigor" & foe.buffs.string ! "adaptive_defense_poison") | mode = "poison"
          equip @bPdmg@
        :?(foe = "aether" & foe.buffs.string ! "adaptive_defense_vigor") | mode = "vigor"
          equip @bVdmg@
        :?(foe = "fire" & foe.buffs.string ! "adaptive_defense_aether") | mode = "aether"
          equip @bFdmg@
        :?(foe = "ice" & foe.buffs.string ! "adaptive_defense_fire") | mode = "fire"
          equip @bIdmg@
        : // foe = "stone"
          equip @bS@ */

  :
    log.logError(_FILE, "ldtF", "unknown <mode>:\n\n"+mode)

  return

func canSmartDash()
  return c.canUseAbility("bash") | c.canUseAbility("dash")
func smartDash()
  ?c.canUseAbility("bash")
    ldtF("bash")
  :?c.canUseAbility("dash")
    ldtF("dash")

//  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  //
//  ┃ ▄▀▄▀▄▀▄▀▄ END OF "Arsenal" ▀▄▀▄▀▄▀▄▀ ┃  //
//  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  //
